{"version":3,"file":"Customizations.test.js","sourceRoot":"../src/","sources":["customizations/Customizations.test.ts"],"names":[],"mappings":";;AAAA,mDAAkD;AAElD,QAAQ,CAAC,gBAAgB,EAAE;IACzB,UAAU,CAAC;QACT,+BAAc,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAChC,+BAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEjD,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACrD,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,GAAG;SACP,CAAC,CAAC;QAEH,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YAChD,CAAC,EAAE,GAAG;SACP,CAAC,CAAC;QAEH,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE;QAChC,+BAAc,CAAC,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAE9D,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC;YAC5D,CAAC,EAAE,GAAG;YACN,CAAC,EAAE,GAAG;SACP,CAAC,CAAC;QAEH,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kBAAkB,EAAE;QACrB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,UAAU,GAAG,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC;QAEjC,+BAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEnC,+BAAc,CAAC,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAC9D,+BAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QAEjD,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3B,+BAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAErC,+BAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { Customizations } from './Customizations';\n\ndescribe('Customizations', () => {\n  beforeEach(() => {\n    Customizations.reset();\n  });\n\n  it('can set/get global settings', () => {\n    Customizations.applySettings({ a: 'a', b: 'b' });\n\n    expect(Customizations.getSettings(['a', 'b'])).toEqual({\n      a: 'a',\n      b: 'b',\n    });\n\n    expect(Customizations.getSettings(['a'])).toEqual({\n      a: 'a',\n    });\n\n    expect(Customizations.getSettings(['z'])).toEqual({});\n  });\n\n  it('can set/get scoped settings', () => {\n    Customizations.applyScopedSettings('Foo', { a: 'a', b: 'b' });\n\n    expect(Customizations.getSettings(['a', 'b'], 'Foo')).toEqual({\n      a: 'a',\n      b: 'b',\n    });\n\n    expect(Customizations.getSettings(['a'], 'Bar')).toEqual({});\n  });\n\n  it('can fire changes', () => {\n    let counter = 0;\n    let incCounter = () => counter++;\n\n    Customizations.observe(incCounter);\n\n    Customizations.applyScopedSettings('Foo', { a: 'a', b: 'b' });\n    Customizations.applySettings({ a: 'a', b: 'b' });\n\n    expect(counter).toEqual(2);\n    Customizations.unobserve(incCounter);\n\n    Customizations.applySettings({ a: 'a', b: 'b' });\n    expect(counter).toEqual(2);\n  });\n});\n"]}