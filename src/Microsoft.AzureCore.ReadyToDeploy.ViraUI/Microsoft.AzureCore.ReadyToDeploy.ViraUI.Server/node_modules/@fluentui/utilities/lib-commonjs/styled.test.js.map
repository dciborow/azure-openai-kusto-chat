{"version":3,"file":"styled.test.js","sourceRoot":"../src/","sources":["styled.test.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable deprecation/deprecation */\nimport * as React from 'react';\nimport * as ReactTestUtils from 'react-dom/test-utils';\nimport { styled } from './styled';\nimport * as renderer from 'react-test-renderer';\nimport { Customizer } from './customizations/Customizer';\nimport { Stylesheet, InjectionMode, mergeStyles } from '@fluentui/merge-styles';\nimport { classNamesFunction } from './classNamesFunction';\nimport { Customizations } from './customizations/Customizations';\nimport { safeCreate } from '@fluentui/test-utilities';\nimport { mount } from 'enzyme';\nimport type { IStyle, IStyleFunction, IStyleFunctionOrObject } from '@fluentui/merge-styles';\n\ninterface ITestStyles {\n  root: IStyle;\n}\ninterface ITestProps {\n  cool?: boolean;\n  styles?: IStyleFunctionOrObject<{}, ITestStyles>;\n  children?: React.ReactNode;\n}\n\nlet _lastProps: ITestProps | undefined;\nlet _renderCount: number;\nlet _styleEval: number;\nlet component: ReturnType<typeof mount> | undefined;\nlet lastStylesInBaseComponent: IStyleFunctionOrObject<{}, ITestStyles> | undefined;\n\nconst getClassNames = classNamesFunction<{}, ITestStyles>();\n\nclass TestBase extends React.Component<ITestProps> {\n  public constructor(props: ITestProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    _renderCount++;\n\n    _lastProps = this.props;\n\n    const classNames = getClassNames(this.props.styles, { cool: this.props.cool });\n    lastStylesInBaseComponent = this.props.styles;\n\n    return <div className={classNames.root}>{this.props.children}</div>;\n  }\n}\n\nclass ShortCircuit extends React.PureComponent {\n  public render(): JSX.Element {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nconst TestStyles = (props: ITestProps): ITestStyles => {\n  _styleEval++;\n  return {\n    root: {\n      background: props.cool ? 'blue' : 'red',\n    },\n  };\n};\n\nconst Test = styled<ITestProps, {}, ITestStyles>(TestBase, TestStyles, undefined, { scope: 'Test' });\n\ndescribe('styled', () => {\n  beforeEach(() => {\n    _lastProps = undefined;\n    _renderCount = 0;\n    _styleEval = 0;\n\n    Stylesheet.getInstance().setConfig({\n      injectionMode: InjectionMode.none,\n    });\n    Stylesheet.getInstance().reset();\n  });\n\n  afterEach(() => {\n    ReactTestUtils.act(() => {\n      component?.unmount();\n      component = undefined;\n    });\n\n    lastStylesInBaseComponent = undefined;\n  });\n\n  it('can create pure components', () => {\n    let renderCount = 0;\n    const render = () => {\n      renderCount++;\n      return <div />;\n    };\n    const styles = () => ({});\n    const Comp = styled(render, styles);\n    const PureComp = styled(render, styles, undefined, undefined, true);\n    const App = () => {\n      return (\n        <div>\n          <Comp />\n          <PureComp />\n        </div>\n      );\n    };\n\n    component = mount(<App />);\n\n    expect(renderCount).toEqual(2);\n    component.setProps({ 'data-foo': '1' });\n    expect(renderCount).toEqual(3);\n  });\n\n  it('renders base styles (background red)', () => {\n    safeCreate(<Test />, (wrapper: renderer.ReactTestRenderer) => {\n      // Test that defaults are the base styles (red).\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('allows user overrides (background green)', () => {\n    safeCreate(<Test styles={{ root: { background: 'green' } }} />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('does not create any new closured functions', () => {\n    let _firstProps: ITestProps | undefined;\n\n    component = mount(<Test />);\n\n    _firstProps = _lastProps;\n    expect(_renderCount).toEqual(1);\n\n    component.setProps({ cool: true });\n\n    expect(_renderCount).toEqual(2);\n    expect(_firstProps).not.toBe(_lastProps);\n\n    if (_firstProps) {\n      // Validate that all functions and objects are the same instances as before.\n      for (let propName in _firstProps) {\n        if (_firstProps.hasOwnProperty(propName)) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const propValue = (_firstProps as any)[propName];\n\n          if (typeof propValue === 'function' || typeof propValue === 'object') {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            expect(propValue).toBe((_lastProps as any)[propName]);\n          }\n        }\n      }\n    }\n  });\n\n  it('allows for contextual overrides (background yellow)', () => {\n    safeCreate(\n      <Customizer\n        scopedSettings={{\n          Test: {\n            styles: {\n              root: {\n                background: 'yellow',\n              },\n            },\n          },\n        }}\n      >\n        <Test />\n      </Customizer>,\n      (wrapper: renderer.ReactTestRenderer) => {\n        expect(wrapper.toJSON()).toMatchSnapshot();\n      },\n    );\n  });\n\n  it('allows for contextual overrides mixed under user overrides (background yellow, color red)', () => {\n    safeCreate(\n      <Customizer\n        scopedSettings={{\n          Test: {\n            styles: {\n              root: {\n                background: 'yellow',\n              },\n            },\n          },\n        }}\n      >\n        <Test styles={{ root: { color: 'red' } }} />\n      </Customizer>,\n      (wrapper: renderer.ReactTestRenderer) => {\n        expect(wrapper.toJSON()).toMatchSnapshot();\n      },\n    );\n  });\n\n  it('can process style props (background blue)', () => {\n    safeCreate(<Test cool />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('can wrap components and merge styling objects for all', () => {\n    const TestInner = styled<ITestProps, {}, ITestStyles>(Test, { root: { color: 'green' } }, undefined);\n    const TestOuter = styled<ITestProps, {}, ITestStyles>(TestInner, { root: { lineHeight: '19px' } }, undefined);\n    safeCreate(<TestOuter cool />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('can wrap components and merge styling functions for all', () => {\n    const TestInner = styled<ITestProps, {}, ITestStyles>(Test, () => ({ root: { color: 'green' } }), undefined);\n    const TestOuter = styled<ITestProps, {}, ITestStyles>(\n      TestInner,\n      () => ({ root: { lineHeight: '29px' } }),\n      undefined,\n    );\n    safeCreate(<TestOuter cool />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('gives wrapped styles object priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, { root: { background: 'grey' } }, undefined);\n    safeCreate(<TestWrapped cool />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('gives wrapped styles function priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, () => ({ root: { background: 'grey' } }), undefined);\n    safeCreate(<TestWrapped cool />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('gives styles object user prop priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, { root: { background: 'grey' } }, undefined);\n    safeCreate(\n      <TestWrapped cool styles={{ root: { background: 'purple' } }} />,\n      (wrapper: renderer.ReactTestRenderer) => {\n        expect(wrapper.toJSON()).toMatchSnapshot();\n      },\n    );\n  });\n\n  it('gives styles function user prop priority', () => {\n    const TestWrapped = styled<ITestProps, {}, ITestStyles>(Test, () => ({ root: { background: 'grey' } }), undefined);\n    safeCreate(\n      <TestWrapped cool styles={{ root: { background: 'purple' } }} />,\n      (wrapper: renderer.ReactTestRenderer) => {\n        expect(wrapper.toJSON()).toMatchSnapshot();\n      },\n    );\n  });\n\n  it('respects styles arg', () => {\n    const defaultStyles = () =>\n      mergeStyles({\n        backgroundColor: 'red',\n      });\n\n    const greenStyles = () =>\n      mergeStyles({\n        backgroundColor: 'green',\n      });\n\n    const DefaultPanel = (props: ITestProps) => {\n      const { styles = defaultStyles } = props;\n      const className = (styles as IStyleFunction<{}, {}>)(props) as string;\n      return <div className={className}>{props.children}</div>;\n    };\n\n    const StyledPanel = styled<{}, {}, {}>(DefaultPanel, greenStyles);\n\n    safeCreate(\n      <div>\n        <DefaultPanel>Panel1</DefaultPanel>\n        <StyledPanel>Panel2</StyledPanel>\n      </div>,\n      (wrapper: renderer.ReactTestRenderer) => {\n        expect(wrapper.toJSON()).toMatchSnapshot();\n      },\n    );\n  });\n\n  it('respects styles type', (done: () => undefined) => {\n    const defaultStyles = { root: { backgroundColor: 'red' } };\n\n    const Component = (props: ITestProps) => {\n      expect((props.styles as IStyleFunction<{}, {}>)(props)).toEqual(defaultStyles);\n      done();\n      return null;\n    };\n\n    const StyledComponent = styled(Component, defaultStyles);\n\n    safeCreate(<StyledComponent />, (wrapper: renderer.ReactTestRenderer) => {\n      expect(wrapper.toJSON()).toMatchSnapshot();\n    });\n  });\n\n  it('can re-render on customization mutations', () => {\n    safeCreate(<Test />, () => {\n      expect(_renderCount).toEqual(1);\n      renderer.act(() => {\n        Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n      });\n      expect(_renderCount).toEqual(2);\n    });\n  });\n\n  it('can re-render the minimal times when nesting', () => {\n    safeCreate(\n      <Test>\n        <Test />\n        <Test />\n      </Test>,\n      () => {\n        expect(_renderCount).toEqual(3);\n        renderer.act(() => {\n          Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n        });\n        expect(_renderCount).toEqual(6);\n      },\n    );\n  });\n\n  it('can re-render the minimal times when nesting and in a Customizer', () => {\n    safeCreate(\n      <Customizer>\n        <Test />\n      </Customizer>,\n      () => {\n        expect(_renderCount).toEqual(1);\n        renderer.act(() => {\n          Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n        });\n        expect(_renderCount).toEqual(2);\n      },\n    );\n  });\n\n  it('can re-render when customized styles change', () => {\n    component = mount(<Test />);\n\n    expect(_styleEval).toEqual(1);\n\n    component.setProps({ 'data-foo': 1 });\n\n    expect(_styleEval).toEqual(1);\n  });\n\n  it('can re-render the minimal times when inside of a pure component', () => {\n    safeCreate(\n      <Customizer>\n        <Test>\n          <ShortCircuit>\n            <Test />\n          </ShortCircuit>\n        </Test>\n      </Customizer>,\n      () => {\n        expect(_renderCount).toEqual(2);\n        renderer.act(() => {\n          Customizations.applySettings({ theme: { palette: { themePrimary: 'red' } } });\n        });\n        expect(_renderCount).toEqual(4);\n      },\n    );\n  });\n\n  it('will not re-render if styles have not changed', () => {\n    component = mount(<Test styles={{ root: { background: 'red' } }} />);\n    expect(_renderCount).toEqual(1);\n    const stylesProp = lastStylesInBaseComponent;\n\n    component.setProps({ cool: true });\n\n    expect(_renderCount).toEqual(2);\n    expect(stylesProp).toBe(lastStylesInBaseComponent);\n  });\n});\n"]}