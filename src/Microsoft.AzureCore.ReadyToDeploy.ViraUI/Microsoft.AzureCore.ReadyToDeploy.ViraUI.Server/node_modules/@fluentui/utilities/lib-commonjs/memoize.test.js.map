{"version":3,"file":"memoize.test.js","sourceRoot":"../src/","sources":["memoize.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { memoize, memoizeFunction } from './memoize';\n\ndescribe('memoizeFunction', () => {\n  it('can return a cached result with a no args function', () => {\n    let _timesCalled = 0;\n    let memoizeFunctiondTimesCalled = memoizeFunction(() => ++_timesCalled);\n\n    expect(memoizeFunctiondTimesCalled()).toEqual(1);\n    expect(memoizeFunctiondTimesCalled()).toEqual(1);\n  });\n\n  it('can return a cached result with a 2 arg function', () => {\n    let _timesCalled = 0;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let combine = memoizeFunction((obj1: any, obj2: any) => obj1.val + obj2.val + ++_timesCalled);\n    let objA = { val: 'a' };\n    let objB = { val: 'b' };\n\n    expect(combine(objA, objA)).toEqual('aa1');\n    expect(combine(objA, objA)).toEqual('aa1');\n    expect(combine(objA, objB)).toEqual('ab2');\n    expect(combine(objA, objB)).toEqual('ab2');\n    expect(combine(objB, objA)).toEqual('ba3');\n    expect(combine(objB, objA)).toEqual('ba3');\n  });\n\n  it('do not use a cached result if the function is different', () => {\n    let _timesCalled = 0;\n    let test = memoizeFunction((fn: Function) => {\n      fn();\n      return ++_timesCalled;\n    });\n\n    function createFunctionArg(): Function {\n      return () => 'test';\n    }\n\n    let fnA = createFunctionArg();\n    let fnB = createFunctionArg();\n\n    expect(test(fnA)).toEqual(1);\n    expect(test(fnA)).toEqual(1);\n    expect(test(fnB)).toEqual(2);\n    expect(test(fnA)).toEqual(1);\n    expect(test(fnB)).toEqual(2);\n    expect(test(fnB)).toEqual(2);\n  });\n\n  it('can return a cached result with falsy args', () => {\n    let _timesCalled = 0;\n    let combine = memoizeFunction(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (obj1: any, obj2: any) => (obj1 ? obj1.val : '') + (obj2 ? obj2.val : '') + ++_timesCalled,\n    );\n    let objA = { val: 'a' };\n    let objB = { val: 'b' };\n\n    expect(combine(objA, objA)).toEqual('aa1');\n    expect(combine(objA, undefined)).toEqual('a2');\n    expect(combine(null, objB)).toEqual('b3');\n    expect(combine(false, 0)).toEqual('4');\n  });\n\n  it('works if you pass less arguments on subsequent calls', () => {\n    let count = 0;\n    let func = memoizeFunction((a: string = '', b: string = '') => a + b + count++);\n\n    expect(func('hi', 'world')).toEqual('hiworld0');\n    expect(func('hi', 'world')).toEqual('hiworld0');\n    expect(func('hi')).toEqual('hi1');\n    expect(func('hi')).toEqual('hi1');\n    expect(func()).toEqual('2');\n    expect(func()).toEqual('2');\n  });\n\n  it('works if you pass more arguments on subsequent calls', () => {\n    let count = 0;\n    let func = memoizeFunction((a: string = '', b: string = '') => a + b + count++);\n\n    expect(func()).toEqual('0');\n    expect(func()).toEqual('0');\n    expect(func('hi')).toEqual('hi1');\n    expect(func('hi')).toEqual('hi1');\n    expect(func('hi', 'world')).toEqual('hiworld2');\n    expect(func('hi', 'world')).toEqual('hiworld2');\n  });\n\n  it('resets after resetCount limit is reached.', () => {\n    let count = 0;\n    let func = memoizeFunction((a: string) => a + count++, 1);\n\n    expect(func('a')).toEqual('a0');\n    expect(func('a')).toEqual('a0');\n    expect(func('b')).toEqual('b1');\n    expect(func('b')).toEqual('b2');\n    expect(func('b')).toEqual('b2');\n    expect(func('a')).toEqual('a3');\n    expect(func('a')).toEqual('a4');\n    expect(func('a')).toEqual('a4');\n  });\n\n  it('updates the cache if the cached value is null', () => {\n    let returnNull = true;\n    let callback = (): number | null => {\n      if (returnNull) {\n        return null;\n      }\n      return 1;\n    };\n    let func = memoizeFunction(() => callback(), undefined, true /*ignoreNullOrUndefinedResult */);\n    expect(func()).toEqual(null);\n    returnNull = false;\n    expect(func()).toEqual(1);\n  });\n\n  it('updates the cache if the cached value is undefined', () => {\n    let returnUndefined = true;\n    let callback = (): number | undefined => {\n      if (returnUndefined) {\n        return undefined;\n      }\n      return 1;\n    };\n    let func = memoizeFunction(() => callback(), undefined, true /*ignoreNullOrUndefinedResult */);\n    expect(func()).toEqual(undefined);\n    returnUndefined = false;\n    expect(func()).toEqual(1);\n  });\n\n  it('caches and preserves if the falsey value returned by the callback method is 0', () => {\n    let returnZero = true;\n    let callback = (): number => {\n      if (returnZero) {\n        return 0;\n      }\n      return 1;\n    };\n    let func = memoizeFunction(() => callback(), undefined, true /*ignoreNullOrUndefinedResult */);\n    expect(func()).toEqual(0);\n    returnZero = false;\n    expect(func()).toEqual(0);\n  });\n\n  it('caches and preserves if the falsey value returned by the callback method is NaN', () => {\n    let returnNaN = true;\n    let callback = (): number | null => {\n      if (returnNaN) {\n        return NaN;\n      }\n      return 1;\n    };\n    let func = memoizeFunction(() => callback(), undefined, true /*ignoreNullOrUndefinedResult */);\n    expect(func()).toEqual(NaN);\n    returnNaN = false;\n    expect(func()).toEqual(NaN);\n  });\n\n  it('caches and preserves if the falsey value returned by the callback method is false', () => {\n    let returnFalse = true;\n    let callback = (): number | boolean => {\n      if (returnFalse) {\n        return false;\n      }\n      return 1;\n    };\n    let func = memoizeFunction(() => callback(), undefined, true /*ignoreNullOrUndefinedResult */);\n    expect(func()).toEqual(false);\n    returnFalse = false;\n    expect(func()).toEqual(false);\n  });\n\n  it('caches and preserves if the falsey value returned by the callback method is empty string', () => {\n    let returnEmptyString = true;\n    let callback = (): number | string => {\n      if (returnEmptyString) {\n        return '';\n      }\n      return 1;\n    };\n    let func = memoizeFunction(() => callback(), undefined, true /*ignoreNullOrUndefinedResult */);\n    expect(func()).toEqual('');\n    returnEmptyString = false;\n    expect(func()).toEqual('');\n  });\n});\n\ndescribe('memoize', () => {\n  it('can work on multiple instances of a class', () => {\n    let _count = 0;\n\n    class Foo {\n      @memoize\n      public bar(val: string): string {\n        return val + _count++;\n      }\n    }\n\n    let f = new Foo();\n\n    expect(f.bar('hi')).toEqual('hi0');\n    expect(f.bar('hi')).toEqual('hi0');\n    expect(f.bar('bye')).toEqual('bye1');\n    expect(f.bar('bye')).toEqual('bye1');\n  });\n});\n"]}