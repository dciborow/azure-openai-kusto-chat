{"version":3,"file":"useFocusRects.test.js","sourceRoot":"../src/","sources":["useFocusRects.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactTestUtils from 'react-dom/test-utils';\nimport { FocusRects } from './useFocusRects';\nimport { FocusRectsProvider } from './FocusRectsProvider';\nimport { IsFocusHiddenClassName, IsFocusVisibleClassName } from './setFocusVisibility';\nimport { KeyCodes } from './KeyCodes';\nimport { addDirectionalKeyCode, removeDirectionalKeyCode } from './keyboard';\nimport { mount, ReactWrapper } from 'enzyme';\n\ndescribe('useFocusRects', () => {\n  let focusRects1: ReactWrapper;\n  let focusRects2: ReactWrapper;\n\n  class MockWindow {\n    public classNames: string[] = [];\n    public addEventListenerCallCount = 0;\n    public removeEventListenerCallCount = 0;\n    public eventListeners: { [key: string]: Function | undefined } = {};\n    public FabricConfig:\n      | {\n          disableFocusRects: boolean | undefined;\n        }\n      | undefined;\n\n    public document = {\n      body: {\n        classList: {\n          contains: (name: string) => this.classNames.indexOf(name) > -1,\n          add: (name: string) => this.classNames.indexOf(name) < 0 && this.classNames.push(name),\n          remove: (name: string) =>\n            this.classNames.indexOf(name) > -1 && this.classNames.splice(this.classNames.indexOf(name), 1),\n          toggle: (name: string, val: boolean) => {\n            const hasClass = this.classNames.indexOf(name) > -1;\n            if (hasClass !== val) {\n              if (hasClass) {\n                this.classNames.splice(this.classNames.indexOf(name), 1);\n              } else {\n                this.classNames.push(name);\n              }\n            }\n          },\n        },\n      },\n    };\n\n    public addEventListener(name: string, callback: Function): void {\n      this.eventListeners[name] = callback;\n      this.addEventListenerCallCount++;\n    }\n\n    public removeEventListener(name: string, callback: Function): void {\n      if (this.eventListeners[name] === callback) {\n        this.eventListeners[name] = undefined;\n        this.removeEventListenerCallCount++;\n      }\n    }\n\n    public reset(): void {\n      this.classNames = [];\n      this.addEventListenerCallCount = 0;\n      this.removeEventListenerCallCount = 0;\n      this.eventListeners = {};\n      this.FabricConfig = undefined;\n    }\n  }\n\n  const mockWindow = new MockWindow();\n  const mockTarget = {\n    ownerDocument: {\n      defaultView: mockWindow,\n    },\n  };\n  const mockRefObject = { current: mockTarget } as unknown as React.RefObject<HTMLElement>;\n\n  const mockWindow2 = new MockWindow();\n  const mockTarget2 = {\n    ownerDocument: {\n      defaultView: mockWindow2,\n    },\n  };\n  const mockRefObject2 = { current: mockTarget2 } as unknown as React.RefObject<HTMLElement>;\n\n  beforeEach(() => {\n    mockWindow.reset();\n    mockWindow2.reset();\n  });\n\n  describe('when attaching the classnames to the window body', () => {\n    it('can hint to show focus when you press a directional key', () => {\n      focusRects1 = mount(<FocusRects rootRef={mockRefObject} />);\n      focusRects2 = mount(<FocusRects rootRef={mockRefObject} />);\n\n      const { eventListeners } = mockWindow;\n      expect(eventListeners.keyup).toBeDefined();\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.up });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.down });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.left });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.right });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.tab });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.pageUp });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.pageDown });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.home });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      mockWindow.eventListeners.keyup!({ target: mockTarget, which: KeyCodes.end });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(4);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects2.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(4);\n    });\n\n    it('can hint to show focus when you press a directional key with multi-window', () => {\n      focusRects1 = mount(<FocusRects rootRef={mockRefObject} />);\n      focusRects2 = mount(<FocusRects rootRef={mockRefObject2} />);\n\n      expect(mockWindow.eventListeners.keyup).toBeDefined();\n      mockWindow.eventListeners.keyup!({ target: mockTarget, which: KeyCodes.up });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow.classNames = [];\n      mockWindow.eventListeners.keyup!({ target: mockTarget, which: KeyCodes.down });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow2.classNames = [];\n      expect(mockWindow2.eventListeners.keyup).toBeDefined();\n      mockWindow2.eventListeners.keyup!({ target: mockTarget2, which: KeyCodes.left });\n      expect(mockWindow2.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow2.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      mockWindow2.classNames = [];\n      mockWindow2.eventListeners.keyup!({ target: mockTarget2, which: KeyCodes.right });\n      expect(mockWindow2.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow2.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(4);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(4);\n\n      expect(mockWindow2.addEventListenerCallCount).toBe(4);\n      expect(mockWindow2.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects2.unmount();\n      });\n      expect(mockWindow2.removeEventListenerCallCount).toBe(4);\n    });\n\n    it('no-ops when you press a non-directional key', () => {\n      focusRects1 = mount(<FocusRects rootRef={mockRefObject} />);\n      focusRects2 = mount(<FocusRects rootRef={mockRefObject} />);\n\n      const { eventListeners } = mockWindow;\n\n      expect(eventListeners.keyup).toBeDefined();\n      eventListeners.keyup!({ target: mockTarget, which: 127 });\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      // don't care about the state of the \"hidden\" class in this case\n\n      expect(mockWindow.addEventListenerCallCount).toBe(4);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects2.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(4);\n    });\n\n    it('can hint to hide focus on mouse click', () => {\n      focusRects1 = mount(<FocusRects rootRef={mockRefObject} />);\n\n      const { eventListeners } = mockWindow;\n\n      expect(eventListeners.keyup).toBeDefined();\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.down });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      expect(eventListeners.mousedown).toBeDefined();\n      eventListeners.mousedown!({ target: mockTarget });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeTruthy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(4);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(4);\n    });\n\n    it('can hint to show focus when you press a custom directional key', () => {\n      focusRects1 = mount(<FocusRects rootRef={mockRefObject} />);\n      focusRects2 = mount(<FocusRects rootRef={mockRefObject} />);\n\n      const { eventListeners } = mockWindow;\n\n      expect(eventListeners.keyup).toBeDefined();\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.f6 });\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      // don't care about the state of the \"hidden\" class in this case\n\n      addDirectionalKeyCode(KeyCodes.f6);\n\n      eventListeners.keyup!({ target: mockTarget, which: KeyCodes.f6 });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeTruthy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(4);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects2.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(4);\n\n      removeDirectionalKeyCode(KeyCodes.f6);\n    });\n\n    it('can disable focus rects', () => {\n      mockWindow.FabricConfig = {\n        disableFocusRects: true,\n      };\n      const focusRect = mount(<FocusRects rootRef={mockRefObject} />);\n\n      const { eventListeners } = mockWindow;\n\n      expect(eventListeners.keyup).toBeUndefined();\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(0);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRect.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n    });\n  });\n\n  describe('when attaching the classnames to the a provider element', () => {\n    type MockProviderRef = {\n      addEventListener: (name: string, callback: Function) => void;\n      removeEventListener: (name: string, callback: Function) => void;\n      eventListeners: { keydown?: Function; keyup?: Function; mousedown?: Function; pointerdown?: Function };\n      classList: {\n        add: (name: string) => void;\n        contains: (name: string) => void;\n        remove: (name: string) => void;\n      };\n    };\n\n    let classNames: string[] = [];\n    let addEventListenerCallCount = 0;\n    let removeEventListenerCallCount = 0;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const MockProvider = React.forwardRef<any, React.PropsWithChildren<{}>>((props, ref) => {\n      const [eventListeners, setEventListeners] = React.useState<MockProviderRef['eventListeners']>({});\n\n      const addEventListener = React.useCallback(\n        (name: keyof MockProviderRef['eventListeners'], callback: Function) => {\n          setEventListeners(currEventListeners => {\n            currEventListeners[name] = callback;\n            return currEventListeners;\n          });\n          addEventListenerCallCount++;\n        },\n        [],\n      );\n\n      const removeEventListener = React.useCallback(\n        (name: keyof MockProviderRef['eventListeners'], callback: Function) => {\n          if (eventListeners[name] === callback) {\n            setEventListeners(currEventListeners => {\n              currEventListeners[name] = undefined;\n              return currEventListeners;\n            });\n            removeEventListenerCallCount++;\n          }\n        },\n        [eventListeners],\n      );\n\n      React.useImperativeHandle<MockProviderRef, MockProviderRef>(\n        ref,\n        () => ({\n          addEventListener,\n          removeEventListener,\n          eventListeners,\n          classList: {\n            add: (name: string) => {\n              if (classNames.indexOf(name) < 0) {\n                classNames.push(name);\n              }\n            },\n            contains: (name: string) => classNames.indexOf(name) > -1,\n            remove: (name: string) => {\n              if (classNames.indexOf(name) > -1) {\n                classNames.splice(classNames.indexOf(name), 1);\n              }\n            },\n          },\n        }),\n        [addEventListener, eventListeners, removeEventListener],\n      );\n\n      return <div>{props.children}</div>;\n    });\n\n    const FocusRectsWithProvider: React.FunctionComponent<{\n      providerRef: React.RefObject<HTMLDivElement>;\n      rootRef?: React.RefObject<HTMLElement>;\n    }> = ({ providerRef, rootRef }) => {\n      return (\n        <FocusRectsProvider providerRef={providerRef}>\n          <MockProvider ref={providerRef}>\n            <FocusRects rootRef={rootRef} />\n          </MockProvider>\n        </FocusRectsProvider>\n      );\n    };\n\n    beforeEach(() => {\n      classNames = [];\n      addEventListenerCallCount = 0;\n      removeEventListenerCallCount = 0;\n    });\n\n    it('can hint to show focus when you press a directional key', () => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const providerRef = React.createRef<any>();\n      focusRects1 = mount(<FocusRectsWithProvider providerRef={providerRef} rootRef={mockRefObject} />);\n\n      const providerElem = providerRef.current as MockProviderRef;\n      const { eventListeners } = providerElem;\n      expect(eventListeners.keyup).toBeDefined();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.up });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      classNames = [];\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.down });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.left });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.right });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.tab });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.pageUp });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.pageDown });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.home });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.end });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(0);\n      expect(addEventListenerCallCount).toBe(4);\n      expect(removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      expect(removeEventListenerCallCount).toBe(4);\n    });\n\n    it('no-ops when you press a non-directional key', () => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const providerRef = React.createRef<any>();\n      focusRects1 = mount(<FocusRectsWithProvider providerRef={providerRef} rootRef={mockRefObject} />);\n\n      const providerElem = providerRef.current as MockProviderRef;\n      const { eventListeners } = providerElem;\n      expect(eventListeners.keyup).toBeDefined();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: 127 });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeFalsy();\n      // don't care about the state of the \"hidden\" class in this case\n\n      expect(mockWindow.addEventListenerCallCount).toBe(0);\n      expect(addEventListenerCallCount).toBe(4);\n      expect(removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      expect(removeEventListenerCallCount).toBe(4);\n    });\n\n    it('can hint to hide focus on mouse click', () => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const providerRef = React.createRef<any>();\n      focusRects1 = mount(<FocusRectsWithProvider providerRef={providerRef} rootRef={mockRefObject} />);\n\n      const providerElem = providerRef.current as MockProviderRef;\n      const { eventListeners } = providerElem;\n      expect(eventListeners.keyup).toBeDefined();\n      expect(eventListeners.mousedown).toBeDefined();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.down });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      ReactTestUtils.act(() => {\n        eventListeners.mousedown!({ target: mockTarget });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeTruthy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeFalsy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(0);\n      expect(addEventListenerCallCount).toBe(4);\n      expect(removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      expect(removeEventListenerCallCount).toBe(4);\n    });\n\n    it('can hint to show focus when you press a custom directional key', () => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const providerRef = React.createRef<any>();\n      focusRects1 = mount(<FocusRectsWithProvider providerRef={providerRef} rootRef={mockRefObject} />);\n\n      const providerElem = providerRef.current as MockProviderRef;\n      const { eventListeners } = providerElem;\n      expect(eventListeners.keyup).toBeDefined();\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.f6 });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeFalsy();\n      // don't care about the state of the \"hidden\" class in this case\n\n      addDirectionalKeyCode(KeyCodes.f6);\n\n      ReactTestUtils.act(() => {\n        eventListeners.keyup!({ target: mockTarget, which: KeyCodes.f6 });\n      });\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeTruthy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(0);\n      expect(addEventListenerCallCount).toBe(4);\n      expect(removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRects1.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      expect(removeEventListenerCallCount).toBe(4);\n\n      removeDirectionalKeyCode(KeyCodes.f6);\n    });\n\n    it('can disable focus rects', () => {\n      mockWindow.FabricConfig = {\n        disableFocusRects: true,\n      };\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const providerRef = React.createRef<any>();\n      const focusRect = mount(<FocusRectsWithProvider providerRef={providerRef} rootRef={mockRefObject} />);\n\n      const providerElem = providerRef.current as MockProviderRef;\n      const { eventListeners } = providerElem;\n\n      expect(eventListeners.keyup).toBeUndefined();\n      expect(mockWindow.classNames.indexOf(IsFocusHiddenClassName) > -1).toBeFalsy();\n      expect(mockWindow.classNames.indexOf(IsFocusVisibleClassName) > -1).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusHiddenClassName)).toBeFalsy();\n      expect(providerElem.classList.contains(IsFocusVisibleClassName)).toBeFalsy();\n\n      expect(mockWindow.addEventListenerCallCount).toBe(0);\n      expect(addEventListenerCallCount).toBe(0);\n      expect(removeEventListenerCallCount).toBe(0);\n      ReactTestUtils.act(() => {\n        focusRect.unmount();\n      });\n      expect(mockWindow.removeEventListenerCallCount).toBe(0);\n      expect(removeEventListenerCallCount).toBe(0);\n    });\n  });\n});\n"]}