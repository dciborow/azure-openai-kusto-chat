{"version":3,"file":"composeRenderFunction.test.js","sourceRoot":"../src/","sources":["renderFunction/composeRenderFunction.test.tsx"],"names":[],"mappings":";;AAAA,6BAA+B;AAC/B,8CAAgD;AAChD,iEAAgE;AAOhE,IAAM,UAAU,GAAG,UAAC,KAAoB;IACtC,OAAO,2CAAiB,KAAK,CAAC,KAAK,GAAI,CAAC;AAC1C,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG,UACvB,KAAqB,EACrB,aAA8C;IAE9C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IAED,OAAO,uCAAY,GAAG,IAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAO,CAAC;AAC7E,CAAC,CAAC;AAEF,IAAM,gBAAgB,GAAG,UACvB,KAAqB,EACrB,aAA8C;IAE9C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,IAAI,CAAC;KACb;IAED,OAAO,uCAAY,GAAG,IAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAO,CAAC;AAC7E,CAAC,CAAC;AAEF,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,EAAE,CAAC,2BAA2B,EAAE;QAC9B,IAAM,wBAAwB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAErF,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,0CAAG,wBAAwB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAI,CAAC,CAAC;QAEtF,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE;QACjD,IAAM,4BAA4B,GAAG,IAAA,6CAAqB,EACxD,gBAAgB,EAChB,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,UAAU,CAAC,CACpD,CAAC;QAEF,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,0CAAG,4BAA4B,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAI,CAAC,CAAC;QAE1F,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAClE,IAAM,uBAAuB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAE1F,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,0CAAG,uBAAuB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,UAAU,CAAC,CAAI,CAAC,CAAC;QAEjG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAClC,IAAM,uBAAuB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAE1F,IAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,0CAAG,uBAAuB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAI,CAAC,CAAC;QAErF,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE;QACnD,IAAM,uBAAuB,GAAG,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;QAE1F,MAAM,CAAC,IAAA,6CAAqB,EAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAClG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport * as renderer from 'react-test-renderer';\nimport { composeRenderFunction } from './composeRenderFunction';\nimport type { IRenderFunction } from '../IRenderFunction';\n\ninterface IExampleProps {\n  value: string;\n}\n\nconst renderBase = (props: IExampleProps): JSX.Element | null => {\n  return <div data-value={props.value} />;\n};\n\nconst renderDecoratorA = (\n  props?: IExampleProps,\n  defaultRender?: IRenderFunction<IExampleProps>,\n): JSX.Element | null => {\n  if (!props) {\n    return null;\n  }\n\n  return <div data-a=\"a\">{defaultRender ? defaultRender(props) : null}</div>;\n};\n\nconst renderDecoratorB = (\n  props?: IExampleProps,\n  defaultRender?: IRenderFunction<IExampleProps>,\n): JSX.Element | null => {\n  if (!props) {\n    return null;\n  }\n\n  return <div data-b=\"b\">{defaultRender ? defaultRender(props) : null}</div>;\n};\n\ndescribe('composeComponentAs', () => {\n  it('passes Base to DecoratorA', () => {\n    const renderDecoratorAWithBase = composeRenderFunction(renderDecoratorA, renderBase);\n\n    const component = renderer.create(<>{renderDecoratorAWithBase({ value: 'test' })}</>);\n\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n\n  it('passes Base to DecoratorB through DecoratorA', () => {\n    const renderDecoratorAAndBWithBase = composeRenderFunction(\n      renderDecoratorA,\n      composeRenderFunction(renderDecoratorB, renderBase),\n    );\n\n    const component = renderer.create(<>{renderDecoratorAAndBWithBase({ value: 'test' })}</>);\n\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n\n  it('passes Base as defaultRender to DecoratorB through DecoratorA', () => {\n    const renderDecoratorAAroundB = composeRenderFunction(renderDecoratorA, renderDecoratorB);\n\n    const component = renderer.create(<>{renderDecoratorAAroundB({ value: 'test' }, renderBase)}</>);\n\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n\n  it('renders without defaultRender', () => {\n    const renderDecoratorAAroundB = composeRenderFunction(renderDecoratorA, renderDecoratorB);\n\n    const component = renderer.create(<>{renderDecoratorAAroundB({ value: 'test' })}</>);\n\n    expect(component.toJSON()).toMatchSnapshot();\n  });\n\n  it('avoids recomposing already-composed components', () => {\n    const renderDecoratorAAroundB = composeRenderFunction(renderDecoratorA, renderDecoratorB);\n\n    expect(composeRenderFunction(renderDecoratorA, renderDecoratorB)).toBe(renderDecoratorAAroundB);\n  });\n});\n"]}