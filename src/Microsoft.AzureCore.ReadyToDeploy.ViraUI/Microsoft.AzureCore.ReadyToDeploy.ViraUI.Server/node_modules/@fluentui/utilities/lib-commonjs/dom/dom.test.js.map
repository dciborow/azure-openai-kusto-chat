{"version":3,"file":"dom.test.js","sourceRoot":"../src/","sources":["dom/dom.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { portalContainsElement } from './portalContainsElement';\nimport { DATA_PORTAL_ATTRIBUTE, setPortalAttribute } from './setPortalAttribute';\nimport { elementContains } from './elementContains';\nimport { getParent } from './getParent';\n\nlet unattachedSvg = document.createElement('svg');\nlet unattachedDiv = document.createElement('div');\nlet parentDiv = document.createElement('div');\nlet childDiv = document.createElement('div');\n\nparentDiv.appendChild(childDiv);\n\ndescribe('elementContains', () => {\n  it('can find a child', () => {\n    expect(elementContains(parentDiv, childDiv)).toEqual(true);\n  });\n\n  it('can return false on an unattached child', () => {\n    expect(elementContains(parentDiv, unattachedDiv)).toEqual(false);\n  });\n\n  it('can return false on a null child', () => {\n    expect(elementContains(parentDiv, null)).toEqual(false);\n  });\n\n  it('can return false on a null parent', () => {\n    expect(elementContains(null, null)).toEqual(false);\n  });\n\n  it('can return false when parent is an svg', () => {\n    expect(elementContains(unattachedSvg, unattachedDiv)).toEqual(false);\n  });\n});\n\ndescribe('getParent', () => {\n  it('returns correct parent for inner SVG elements', () => {\n    let childSvg = document.createElement('svg');\n    let svgRectangle = document.createElement('rect');\n    childSvg.appendChild(svgRectangle);\n    parentDiv.appendChild(childSvg);\n\n    expect(getParent(svgRectangle)).toEqual(childSvg);\n    expect(getParent(childSvg)).toEqual(parentDiv);\n  });\n});\n\ndescribe('setPortalAttribute', () => {\n  it('sets attribute', () => {\n    let testDiv = document.createElement('div');\n    expect(testDiv.getAttribute(DATA_PORTAL_ATTRIBUTE)).toBeFalsy();\n    setPortalAttribute(testDiv);\n    expect(testDiv.getAttribute(DATA_PORTAL_ATTRIBUTE)).toBeTruthy();\n  });\n});\n\ndescribe('portalContainsElement', () => {\n  let root: HTMLElement;\n  let leaf: HTMLElement;\n  let parent: HTMLElement;\n  let portal: HTMLElement;\n  let unlinked: HTMLElement;\n\n  beforeEach(() => {\n    root = document.createElement('div');\n    leaf = document.createElement('div');\n    parent = document.createElement('div');\n    portal = document.createElement('div');\n    unlinked = document.createElement('div');\n\n    setPortalAttribute(portal);\n  });\n\n  it('works with and without parent specified', () => {\n    root.appendChild(parent);\n    parent.appendChild(portal);\n    portal.appendChild(leaf);\n    expect(portalContainsElement(root)).toBeFalsy();\n    expect(portalContainsElement(parent)).toBeFalsy();\n    expect(portalContainsElement(portal)).toBeTruthy();\n    expect(portalContainsElement(leaf)).toBeTruthy();\n    expect(portalContainsElement(leaf, parent)).toBeTruthy();\n  });\n\n  it('works correctly when parent and child are in same portal', () => {\n    root.appendChild(portal);\n    portal.appendChild(parent);\n    parent.appendChild(leaf);\n    expect(portalContainsElement(parent)).toBeTruthy();\n    expect(portalContainsElement(leaf, parent)).toBeFalsy();\n  });\n\n  it('works with hierarchically invalid parents', () => {\n    root.appendChild(parent);\n    parent.appendChild(portal);\n    portal.appendChild(leaf);\n    // When parent is invalid, searches should go to root\n    expect(portalContainsElement(root, leaf)).toBeFalsy();\n    expect(portalContainsElement(parent, leaf)).toBeFalsy();\n    expect(portalContainsElement(portal, leaf)).toBeTruthy();\n    expect(portalContainsElement(leaf, unlinked)).toBeTruthy();\n  });\n\n  it('works when element is parent', () => {\n    root.appendChild(parent);\n    parent.appendChild(portal);\n    portal.appendChild(leaf);\n    expect(portalContainsElement(root, root)).toBeFalsy();\n    expect(portalContainsElement(parent, parent)).toBeFalsy();\n    expect(portalContainsElement(portal, portal)).toBeTruthy();\n    expect(portalContainsElement(leaf, leaf)).toBeFalsy();\n  });\n});\n"]}