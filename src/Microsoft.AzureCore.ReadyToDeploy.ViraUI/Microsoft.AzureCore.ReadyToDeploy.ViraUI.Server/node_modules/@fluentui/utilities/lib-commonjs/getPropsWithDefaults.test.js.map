{"version":3,"file":"getPropsWithDefaults.test.js","sourceRoot":"../src/","sources":["getPropsWithDefaults.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { getPropsWithDefaults } from './getPropsWithDefaults';\n\ninterface IProps {\n  num?: number;\n  bool?: boolean;\n  str?: string;\n  fn?: () => void;\n  nul?: string | null;\n}\n\nconst defaultProps: IProps = {\n  num: 4,\n  bool: true,\n  str: 'default',\n  fn: () => {\n    console.log('default');\n  },\n  nul: 'not null',\n};\n\ndescribe('getPropsWithDefaults', () => {\n  it(\"doesn't override non-undefined specified values\", () => {\n    const propsWithoutDefaults: IProps = {\n      num: 0,\n      bool: false,\n      str: '',\n      fn: () => undefined,\n      nul: null,\n    };\n\n    const props = getPropsWithDefaults(defaultProps, propsWithoutDefaults);\n\n    expect(props.num).toEqual(propsWithoutDefaults.num);\n    expect(props.bool).toEqual(propsWithoutDefaults.bool);\n    expect(props.str).toEqual(propsWithoutDefaults.str);\n    expect(props.fn).toEqual(propsWithoutDefaults.fn);\n    expect(props.nul).toEqual(propsWithoutDefaults.nul);\n  });\n\n  it('overrides specified undefined values', () => {\n    const propsWithoutDefaults: IProps = {\n      num: undefined,\n      bool: undefined,\n      str: undefined,\n      fn: undefined,\n      nul: undefined,\n    };\n\n    const props = getPropsWithDefaults(defaultProps, propsWithoutDefaults);\n\n    expect(props.num).toEqual(defaultProps.num);\n    expect(props.bool).toEqual(defaultProps.bool);\n    expect(props.str).toEqual(defaultProps.str);\n    expect(props.fn).toEqual(defaultProps.fn);\n    expect(props.nul).toEqual(defaultProps.nul);\n  });\n\n  it('overrides unspecified values', () => {\n    const propsWithoutDefaults: IProps = {};\n\n    const props = getPropsWithDefaults(defaultProps, propsWithoutDefaults);\n\n    expect(props.num).toEqual(defaultProps.num);\n    expect(props.bool).toEqual(defaultProps.bool);\n    expect(props.str).toEqual(defaultProps.str);\n    expect(props.fn).toEqual(defaultProps.fn);\n    expect(props.nul).toEqual(defaultProps.nul);\n  });\n});\n"]}