{"version":3,"file":"warnControlledUsage.test.js","sourceRoot":"../src/","sources":["warn/warnControlledUsage.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { setWarningCallback } from './warn';\nimport { warnControlledUsage, resetControlledWarnings } from './warnControlledUsage';\nimport type { IWarnControlledUsageParams } from './warnControlledUsage';\n\nconst warningCallback = jest.fn();\n\nconst noOp = () => undefined;\n\ninterface IProps {\n  value?: string;\n  defaultValue?: string;\n  onChange?: Function;\n  readOnly?: boolean;\n}\n\nconst params: Omit<IWarnControlledUsageParams<IProps>, 'props'> = {\n  componentId: 'TestComponent1',\n  componentName: 'TestComponent',\n  valueProp: 'value',\n  defaultValueProp: 'defaultValue',\n  onChangeProp: 'onChange',\n  readOnlyProp: 'readOnly',\n};\n\ndescribe('warnControlledUsage', () => {\n  beforeEach(() => {\n    setWarningCallback(warningCallback);\n  });\n\n  afterEach(() => {\n    warningCallback.mockReset();\n    setWarningCallback(undefined);\n    resetControlledWarnings();\n  });\n\n  it('does not warn or throw if old props are undefined', () => {\n    warnControlledUsage<IProps>({ ...params, props: {} });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    // If oldProps was defined, this would be an error for switching from uncontrolled to controlled\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n  });\n\n  it('does not warn if uncontrolled regardless of if onChange/readOnly is provided', () => {\n    warnControlledUsage<IProps>({ ...params, props: { defaultValue: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    warnControlledUsage<IProps>({ ...params, props: {} });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    warnControlledUsage<IProps>({ ...params, props: { defaultValue: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    warnControlledUsage<IProps>({ ...params, props: { onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    warnControlledUsage<IProps>({ ...params, props: { defaultValue: 'test', readOnly: true } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    warnControlledUsage<IProps>({ ...params, props: { readOnly: true } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n  });\n\n  it('does not warn if controlled and onChange is provided', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n  });\n\n  it('does not warn if controlled and readOnly is true', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test', readOnly: true } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n  });\n\n  it('warns if controlled and onChange/readOnly is not provided', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: You provided a 'value' prop to a TestComponent without an 'onChange' handler. This will render a ` +\n        `read-only field. If the field should be mutable use 'defaultValue'. Otherwise, set 'onChange' or 'readOnly'.`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('warns if controlled and onChange is not provided (right message for component without readOnly)', () => {\n    const { readOnlyProp, ...otherParams } = params;\n    warnControlledUsage<IProps>({ ...otherParams, props: { value: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: You provided a 'value' prop to a TestComponent without an 'onChange' handler. This will render a ` +\n        `read-only field. If the field should be mutable use 'defaultValue'. Otherwise, set 'onChange'.`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({ ...otherParams, props: { value: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('re-warns when componentId changes for controlled without onChange', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n\n    warnControlledUsage<IProps>({ ...params, componentId: 'TestComponent2', props: { value: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(2);\n  });\n\n  it('warns if controlled and readOnly is false', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test', readOnly: false } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: You provided a 'value' prop to a TestComponent without an 'onChange' handler. This will render a ` +\n        `read-only field. If the field should be mutable use 'defaultValue'. Otherwise, set 'onChange' or 'readOnly'.`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({ ...params, props: { value: 'test', readOnly: false } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('warns if both value and defaultValue are provided', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'hello', defaultValue: 'world', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: You provided both 'value' and 'defaultValue' to a TestComponent. Form fields must be either ` +\n        `controlled or uncontrolled (specify either the 'value' prop, or the 'defaultValue' prop, but not both). ` +\n        `Decide between using a controlled or uncontrolled TestComponent and remove one of these props. ` +\n        `More info: https://fb.me/react-controlled-components`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({ ...params, props: { value: 'hello', defaultValue: 'world', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('re-warns when componentId changes if both value and defaultValue are provided', () => {\n    warnControlledUsage<IProps>({ ...params, props: { value: 'hello', defaultValue: 'world', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n\n    warnControlledUsage<IProps>({\n      ...params,\n      componentId: 'TestComponent2',\n      props: { value: 'hello', defaultValue: 'world', onChange: noOp },\n    });\n    expect(warningCallback).toHaveBeenCalledTimes(2);\n  });\n\n  it('does not warn if old and new are uncontrolled', () => {\n    warnControlledUsage<IProps>({ ...params, oldProps: { defaultValue: 'test' }, props: { defaultValue: 'test' } });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n\n    warnControlledUsage<IProps>({ ...params, props: {}, oldProps: {} });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n  });\n\n  it('does not warn if old and new are controlled', () => {\n    warnControlledUsage<IProps>({\n      ...params,\n      oldProps: { value: 'world', onChange: noOp },\n      props: { value: 'test', onChange: noOp },\n    });\n    expect(warningCallback).toHaveBeenCalledTimes(0);\n  });\n\n  it('warns if old is implicitly uncontrolled and new is controlled', () => {\n    warnControlledUsage<IProps>({ ...params, oldProps: {}, props: { value: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: A component is changing an uncontrolled TestComponent to be controlled. TestComponents should not ` +\n        `switch from controlled to uncontrolled (or vice versa). Decide between using controlled or uncontrolled ` +\n        `for the lifetime of the component. More info: https://fb.me/react-controlled-components`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({ ...params, oldProps: {}, props: { value: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('warns if old is uncontrolled and new is controlled', () => {\n    warnControlledUsage<IProps>({ ...params, oldProps: {}, props: { value: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: A component is changing an uncontrolled TestComponent to be controlled. TestComponents should not ` +\n        `switch from controlled to uncontrolled (or vice versa). Decide between using controlled or uncontrolled ` +\n        `for the lifetime of the component. More info: https://fb.me/react-controlled-components`,\n    );\n  });\n\n  it('re-warns when componentId changes if old is uncontrolled and new is controlled', () => {\n    warnControlledUsage<IProps>({ ...params, oldProps: {}, props: { value: 'test', onChange: noOp } });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n\n    warnControlledUsage<IProps>({\n      ...params,\n      componentId: 'TestComponent2',\n      oldProps: {},\n      props: { value: 'test', onChange: noOp },\n    });\n    expect(warningCallback).toHaveBeenCalledTimes(2);\n  });\n\n  it('warns if old is controlled and new is implicitly uncontrolled', () => {\n    warnControlledUsage<IProps>({ ...params, oldProps: { value: 'test', onChange: noOp }, props: {} });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: A component is changing a controlled TestComponent to be uncontrolled. TestComponents should not ` +\n        `switch from controlled to uncontrolled (or vice versa). Decide between using controlled or uncontrolled ` +\n        `for the lifetime of the component. More info: https://fb.me/react-controlled-components`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({ ...params, oldProps: { value: 'test', onChange: noOp }, props: {} });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('warns if old is controlled and new is uncontrolled', () => {\n    warnControlledUsage<IProps>({\n      ...params,\n      oldProps: { value: 'hello', onChange: noOp },\n      props: { defaultValue: 'world' },\n    });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n    expect(warningCallback).toHaveBeenLastCalledWith(\n      `Warning: A component is changing a controlled TestComponent to be uncontrolled. TestComponents should not ` +\n        `switch from controlled to uncontrolled (or vice versa). Decide between using controlled or uncontrolled ` +\n        `for the lifetime of the component. More info: https://fb.me/react-controlled-components`,\n    );\n\n    // Don't re-warn\n    warnControlledUsage<IProps>({\n      ...params,\n      oldProps: { value: 'hello', onChange: noOp },\n      props: { defaultValue: 'world' },\n    });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n  });\n\n  it('re-warns when componentId changes if old is controlled and new is implicitly uncontrolled', () => {\n    warnControlledUsage<IProps>({ ...params, oldProps: { value: 'test', onChange: noOp }, props: {} });\n    expect(warningCallback).toHaveBeenCalledTimes(1);\n\n    warnControlledUsage<IProps>({\n      ...params,\n      componentId: 'TestComponent2',\n      oldProps: { value: 'test', onChange: noOp },\n      props: {},\n    });\n    expect(warningCallback).toHaveBeenCalledTimes(2);\n  });\n});\n"]}