{"version":3,"file":"overflow.test.js","sourceRoot":"../src/","sources":["overflow.test.ts"],"names":[],"mappings":";;;IAEA,QAAQ,CAAC,UAAU,EAAE;QACnB,EAAE,CAAC,2CAA2C,EAAE;YAC9C,MAAM,CACJ,IAAA,sBAAW,EAAC;gBACV,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,EAAE;gBAChB,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,EAAE;aACF,CAAC,CAClB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE;YAChC,IAAM,mBAAmB,GAAG;gBAC1B,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,EAAE;gBAChB,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,EAAE;aACjB,CAAC;YAEF,MAAM,CAAC,IAAA,sBAAW,EAAC,mBAAkC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACtE,MAAM,CAAC,IAAA,gCAAqB,EAAC,mBAAkC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2BAA2B,EAAE;YAC9B,IAAM,mBAAmB,GAAG;gBAC1B,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,EAAE;gBAChB,WAAW,EAAE,EAAE;gBACf,YAAY,EAAE,EAAE;aACjB,CAAC;YAEF,MAAM,CAAC,IAAA,sBAAW,EAAC,mBAAkC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACtE,MAAM,CAAC,IAAA,8BAAmB,EAAC,mBAAkC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["import { hasHorizontalOverflow, hasVerticalOverflow, hasOverflow } from './overflow';\n\ndescribe('overflow', () => {\n  it('returns false when no overflow is present', () => {\n    expect(\n      hasOverflow({\n        clientWidth: 10,\n        clientHeight: 10,\n        scrollWidth: 10,\n        scrollHeight: 10,\n      } as HTMLElement),\n    ).toEqual(false);\n  });\n\n  it('detects horizontal overflow', () => {\n    const elementWithOverflow = {\n      clientWidth: 10,\n      clientHeight: 10,\n      scrollWidth: 20,\n      scrollHeight: 10,\n    };\n\n    expect(hasOverflow(elementWithOverflow as HTMLElement)).toEqual(true);\n    expect(hasHorizontalOverflow(elementWithOverflow as HTMLElement)).toEqual(true);\n  });\n\n  it('detects vertical overflow', () => {\n    const elementWithOverflow = {\n      clientWidth: 10,\n      clientHeight: 10,\n      scrollWidth: 10,\n      scrollHeight: 20,\n    };\n\n    expect(hasOverflow(elementWithOverflow as HTMLElement)).toEqual(true);\n    expect(hasVerticalOverflow(elementWithOverflow as HTMLElement)).toEqual(true);\n  });\n});\n"]}