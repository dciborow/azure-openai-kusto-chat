{"version":3,"file":"getFirstVisibleElementFromSelector.js","sourceRoot":"../src/","sources":["dom/getFirstVisibleElementFromSelector.ts"],"names":[],"mappings":";;;;IAGA;;;;;;OAMG;IACH,SAAgB,kCAAkC,CAAC,QAAgB;QACjE,IAAM,GAAG,GAAG,IAAA,yBAAW,GAAG,CAAC;QAC3B,IAAM,QAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAEhD,sGAAsG;QACtG,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,OAAoB,YACpD,OAAA,IAAA,oCAA4B,EAAC,OAAO,EAAE,MAAA,GAAG,CAAC,WAAW,mCAAI,SAAS,CAAC,CAAA,EAAA,CACpE,CAAC;IACJ,CAAC;IARD,gFAQC","sourcesContent":["import { isElementVisibleAndNotHidden } from '../focus';\nimport { getDocument } from './getDocument';\n\n/**\n * Gets the first visible element that matches the given selector\n * @param selector - The selector to use to find potential visible elements\n * @returns The first visible element that matches the selector, otherwise undefined\n *\n * @public\n */\nexport function getFirstVisibleElementFromSelector(selector: string): Element | undefined {\n  const doc = getDocument()!;\n  const elements = doc.querySelectorAll(selector);\n\n  // Iterate across the elements that match the selector and return the first visible/non-hidden element\n  return Array.from(elements).find((element: HTMLElement) =>\n    isElementVisibleAndNotHidden(element, doc.defaultView ?? undefined),\n  );\n}\n"]}