{"version":3,"file":"asAsync.test.js","sourceRoot":"../src/","sources":["asAsync.test.tsx"],"names":[],"mappings":";;;IAIA,QAAQ,CAAC,SAAS,EAAE;QAClB,EAAE,CAAC,wBAAwB,EAAE,UAAC,IAAqB;YACjD,IAAI,QAAQ,GAA4C,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC;YACxE,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,8DAA8D;YAC9D,IAAM,gBAAgB,GAAG,IAAI,OAAO,CAAM,UAAC,OAAY;gBACrD,QAAQ,GAAG,OAAO,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,IAAM,UAAU,GAAG,IAAA,iBAAO,EAAC;gBACzB,IAAI,EAAE;oBACJ,WAAW,GAAG,IAAI,CAAC;oBACnB,OAAO,gBAAgB,CAAC;gBAC1B,CAAC;aACF,CAAC,CAAC;YACH,IAAM,OAAO,GAAG,IAAA,cAAK,EAAC,oBAAC,UAAU,OAAG,CAAC,CAAC;YAEtC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;YACnC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;YAE9B,QAAQ,CAAC,cAAM,OAAA,yCAAgB,EAAhB,CAAgB,CAAC,CAAC;YAEjC,OAAO,CAAC,QAAQ,CAAC;gBACf,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxC,WAAW,GAAG,KAAK,CAAC;gBAEpB,oBAAoB;gBACpB,IAAA,cAAK,EAAC,oBAAC,UAAU,OAAG,CAAC,CAAC;gBACtB,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAChC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxC,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iCAAiC,EAAE,UAAC,IAAqB;YAC1D,IAAI,QAAQ,GAA4C,cAAM,OAAA,SAAS,EAAT,CAAS,CAAC;YACxE,IAAI,WAAW,GAAG,KAAK,CAAC;YACxB,8DAA8D;YAC9D,IAAM,gBAAgB,GAAG,IAAI,OAAO,CAAM,UAAC,OAAY;gBACrD,QAAQ,GAAG,OAAO,CAAC;YACrB,CAAC,CAAC,CAAC;YAEH,IAAM,UAAU,GAAG,IAAA,iBAAO,EAAC;gBACzB,IAAI,EAAE;oBACJ,WAAW,GAAG,IAAI,CAAC;oBACnB,OAAO,gBAAgB,CAAC;gBAC1B,CAAC;aACF,CAAC,CAAC;YACH,IAAM,OAAO,GAAG,IAAA,cAAK,EAAC,oBAAC,UAAU,IAAC,gBAAgB,EAAE,cAAM,OAAA,+CAAsB,EAAtB,CAAsB,GAAI,CAAC,CAAC;YAEtF,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC9C,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;YAE9B,QAAQ,CAAC,cAAM,OAAA,yCAAgB,EAAhB,CAAgB,CAAC,CAAC;YAEjC,OAAO,CAAC,QAAQ,CAAC;gBACf,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACxC,IAAI,EAAE,CAAC;YACT,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { asAsync } from './asAsync';\nimport { mount } from 'enzyme';\n\ndescribe('asAsync', () => {\n  it('can async load exports', (done: () => undefined) => {\n    let _resolve: (result: React.ElementType<{}>) => void = () => undefined;\n    let _loadCalled = false;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const loadThingPromise = new Promise<any>((resolve: any) => {\n      _resolve = resolve;\n    });\n\n    const AsyncThing = asAsync({\n      load: () => {\n        _loadCalled = true;\n        return loadThingPromise;\n      },\n    });\n    const wrapper = mount(<AsyncThing />);\n\n    expect(_loadCalled).toBe(true);\n    expect(wrapper.text()).toBeFalsy();\n    expect(_resolve).toBeTruthy();\n\n    _resolve(() => <div>thing</div>);\n\n    process.nextTick(() => {\n      wrapper.update();\n      expect(wrapper.text()).toEqual('thing');\n      _loadCalled = false;\n\n      // Test cached case.\n      mount(<AsyncThing />);\n      expect(_loadCalled).toBe(false);\n      expect(wrapper.text()).toEqual('thing');\n      done();\n    });\n  });\n\n  it('can async load with placeholder', (done: () => undefined) => {\n    let _resolve: (result: React.ElementType<{}>) => void = () => undefined;\n    let _loadCalled = false;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const loadThingPromise = new Promise<any>((resolve: any) => {\n      _resolve = resolve;\n    });\n\n    const AsyncThing = asAsync({\n      load: () => {\n        _loadCalled = true;\n        return loadThingPromise;\n      },\n    });\n    const wrapper = mount(<AsyncThing asyncPlaceholder={() => <div>placeholder</div>} />);\n\n    expect(_loadCalled).toBe(true);\n    expect(wrapper.text()).toEqual('placeholder');\n    expect(_resolve).toBeTruthy();\n\n    _resolve(() => <div>thing</div>);\n\n    process.nextTick(() => {\n      wrapper.update();\n      expect(wrapper.text()).toEqual('thing');\n      done();\n    });\n  });\n});\n"]}