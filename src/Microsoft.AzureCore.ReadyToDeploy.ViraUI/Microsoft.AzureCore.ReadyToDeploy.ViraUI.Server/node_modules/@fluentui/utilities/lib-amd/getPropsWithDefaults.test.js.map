{"version":3,"file":"getPropsWithDefaults.test.js","sourceRoot":"../src/","sources":["getPropsWithDefaults.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { getPropsWithDefaults } from './getPropsWithDefaults';\n\ninterface IProps {\n  num?: number;\n  bool?: boolean;\n  str?: string;\n  fn?: () => void;\n  nul?: string | null;\n}\n\nconst defaultProps: IProps = {\n  num: 4,\n  bool: true,\n  str: 'default',\n  fn: () => {\n    console.log('default');\n  },\n  nul: 'not null',\n};\n\ndescribe('getPropsWithDefaults', () => {\n  it(\"doesn't override non-undefined specified values\", () => {\n    const propsWithoutDefaults: IProps = {\n      num: 0,\n      bool: false,\n      str: '',\n      fn: () => undefined,\n      nul: null,\n    };\n\n    const props = getPropsWithDefaults(defaultProps, propsWithoutDefaults);\n\n    expect(props.num).toEqual(propsWithoutDefaults.num);\n    expect(props.bool).toEqual(propsWithoutDefaults.bool);\n    expect(props.str).toEqual(propsWithoutDefaults.str);\n    expect(props.fn).toEqual(propsWithoutDefaults.fn);\n    expect(props.nul).toEqual(propsWithoutDefaults.nul);\n  });\n\n  it('overrides specified undefined values', () => {\n    const propsWithoutDefaults: IProps = {\n      num: undefined,\n      bool: undefined,\n      str: undefined,\n      fn: undefined,\n      nul: undefined,\n    };\n\n    const props = getPropsWithDefaults(defaultProps, propsWithoutDefaults);\n\n    expect(props.num).toEqual(defaultProps.num);\n    expect(props.bool).toEqual(defaultProps.bool);\n    expect(props.str).toEqual(defaultProps.str);\n    expect(props.fn).toEqual(defaultProps.fn);\n    expect(props.nul).toEqual(defaultProps.nul);\n  });\n\n  it('overrides unspecified values', () => {\n    const propsWithoutDefaults: IProps = {};\n\n    const props = getPropsWithDefaults(defaultProps, propsWithoutDefaults);\n\n    expect(props.num).toEqual(defaultProps.num);\n    expect(props.bool).toEqual(defaultProps.bool);\n    expect(props.str).toEqual(defaultProps.str);\n    expect(props.fn).toEqual(defaultProps.fn);\n    expect(props.nul).toEqual(defaultProps.nul);\n  });\n});\n"]}