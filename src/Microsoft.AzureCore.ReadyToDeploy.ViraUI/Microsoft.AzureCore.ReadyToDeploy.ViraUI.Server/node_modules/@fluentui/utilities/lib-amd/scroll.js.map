{"version":3,"file":"scroll.js","sourceRoot":"../src/","sources":["scroll.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDocument } from './dom/getDocument';\nimport { mergeStyles } from '@fluentui/merge-styles';\nimport { EventGroup } from './EventGroup';\nimport { getWindow } from './dom/getWindow';\n\nlet _scrollbarWidth: number;\nlet _bodyScrollDisabledCount = 0;\n\nconst DisabledScrollClassName = mergeStyles({\n  overflow: 'hidden !important' as 'hidden',\n});\n\n/**\n * Placing this attribute on scrollable divs optimizes detection to know\n * if the div is scrollable or not (given we can avoid expensive operations\n * like getComputedStyle.)\n *\n * @public\n */\nexport const DATA_IS_SCROLLABLE_ATTRIBUTE = 'data-is-scrollable';\n\n/**\n * Allows the user to scroll within a element,\n * while preventing the user from scrolling the body\n */\nexport const allowScrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  const window = getWindow(element);\n\n  if (!element || !window) {\n    return;\n  }\n\n  let _previousClientY = 0;\n  let _element: Element | null = null;\n  let computedStyles: CSSStyleDeclaration | undefined = window.getComputedStyle(element);\n\n  // remember the clientY for future calls of _preventOverscrolling\n  const _saveClientY = (event: TouchEvent): void => {\n    if (event.targetTouches.length === 1) {\n      _previousClientY = event.targetTouches[0].clientY;\n    }\n  };\n\n  // prevent the body from scrolling when the user attempts\n  // to scroll past the top or bottom of the element\n  const _preventOverscrolling = (event: TouchEvent): void => {\n    // only respond to a single-finger touch\n    if (event.targetTouches.length !== 1) {\n      return;\n    }\n\n    // prevent the body touchmove handler from firing\n    // so that scrolling is allowed within the element\n    event.stopPropagation();\n\n    if (!_element) {\n      return;\n    }\n\n    const clientY = event.targetTouches[0].clientY - _previousClientY;\n\n    const scrollableParent = findScrollableParent(event.target as HTMLElement) as HTMLElement;\n    if (scrollableParent && _element !== scrollableParent) {\n      _element = scrollableParent;\n      computedStyles = window.getComputedStyle(_element);\n    }\n\n    const scrollTop = _element.scrollTop;\n    const isColumnReverse = computedStyles?.flexDirection === 'column-reverse';\n\n    // if the element is scrolled to the top,\n    // prevent the user from scrolling up\n    if (scrollTop === 0 && (isColumnReverse ? clientY < 0 : clientY > 0)) {\n      event.preventDefault();\n    }\n\n    // if the element is scrolled to the bottom,\n    // prevent the user from scrolling down\n    if (\n      _element.scrollHeight - Math.abs(Math.ceil(scrollTop)) <= _element.clientHeight &&\n      (isColumnReverse ? clientY > 0 : clientY < 0)\n    ) {\n      event.preventDefault();\n    }\n  };\n\n  events.on(element, 'touchstart', _saveClientY, { passive: false });\n  events.on(element, 'touchmove', _preventOverscrolling, { passive: false });\n\n  _element = element;\n};\n\n/**\n * Same as allowScrollOnElement but does not prevent overscrolling.\n */\nexport const allowOverscrollOnElement = (element: HTMLElement | null, events: EventGroup): void => {\n  if (!element) {\n    return;\n  }\n  const _allowElementScroll = (event: TouchEvent) => {\n    event.stopPropagation();\n  };\n  events.on(element, 'touchmove', _allowElementScroll, { passive: false });\n};\n\nconst _disableIosBodyScroll = (event: TouchEvent) => {\n  event.preventDefault();\n};\n\n/**\n * Disables the body scrolling.\n *\n * @public\n */\nexport function disableBodyScroll(): void {\n  let doc = getDocument();\n\n  if (doc && doc.body && !_bodyScrollDisabledCount) {\n    doc.body.classList.add(DisabledScrollClassName);\n    doc.body.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });\n  }\n\n  _bodyScrollDisabledCount++;\n}\n\n/**\n * Enables the body scrolling.\n *\n * @public\n */\nexport function enableBodyScroll(): void {\n  if (_bodyScrollDisabledCount > 0) {\n    let doc = getDocument();\n\n    if (doc && doc.body && _bodyScrollDisabledCount === 1) {\n      doc.body.classList.remove(DisabledScrollClassName);\n      doc.body.removeEventListener('touchmove', _disableIosBodyScroll);\n    }\n\n    _bodyScrollDisabledCount--;\n  }\n}\n\n/**\n * Calculates the width of a scrollbar for the browser/os.\n *\n * @public\n */\nexport function getScrollbarWidth(doc?: Document): number {\n  if (_scrollbarWidth === undefined) {\n    const theDoc = doc ?? getDocument()!;\n    let scrollDiv: HTMLElement = theDoc.createElement('div');\n    scrollDiv.style.setProperty('width', '100px');\n    scrollDiv.style.setProperty('height', '100px');\n    scrollDiv.style.setProperty('overflow', 'scroll');\n    scrollDiv.style.setProperty('position', 'absolute');\n    scrollDiv.style.setProperty('top', '-9999px');\n    theDoc.body.appendChild(scrollDiv);\n    // Get the scrollbar width\n    _scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n    // Delete the DIV\n    theDoc.body.removeChild(scrollDiv);\n  }\n\n  return _scrollbarWidth;\n}\n\n/**\n * Traverses up the DOM for the element with the data-is-scrollable=true attribute, or returns\n * document.body.\n *\n * @public\n */\nexport function findScrollableParent(startingElement: HTMLElement | null): HTMLElement | Window | undefined | null {\n  let el: HTMLElement | Window | undefined | null = startingElement;\n  const doc = getDocument(startingElement)!;\n\n  // First do a quick scan for the scrollable attribute.\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) === 'true') {\n      return el;\n    }\n    el = el.parentElement;\n  }\n\n  // If we haven't found it, the use the slower method: compute styles to evaluate if overflow is set.\n  el = startingElement;\n\n  while (el && el !== doc.body) {\n    if (el.getAttribute(DATA_IS_SCROLLABLE_ATTRIBUTE) !== 'false') {\n      const computedStyles = getComputedStyle(el);\n      let overflowY = computedStyles ? computedStyles.getPropertyValue('overflow-y') : '';\n\n      if (overflowY && (overflowY === 'scroll' || overflowY === 'auto')) {\n        return el;\n      }\n    }\n\n    el = el.parentElement;\n  }\n\n  // Fall back to window scroll.\n  if (!el || el === doc.body) {\n    el = getWindow(startingElement);\n  }\n\n  return el;\n}\n"]}