{"version":3,"file":"MergeStylesRootContext.js","sourceRoot":"../src/","sources":["shadowDom/contexts/MergeStylesRootContext.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  GLOBAL_STYLESHEET_KEY,\n  ShadowDomStylesheet,\n  makeShadowConfig,\n  DEFAULT_SHADOW_CONFIG,\n} from '@fluentui/merge-styles';\nimport { getWindow } from '../../dom';\n\nimport {\n  useAdoptedStylesheet as useAdoptedStylesheetDefault,\n  useAdoptedStylesheetEx as useAdoptedStylesheetExDefault,\n} from '../hooks/useAdoptedStylesheet';\nimport { useShadowConfig as useShadowConfigDefault } from '../hooks/useShadowConfig';\nimport {\n  useHasMergeStylesShadowRootContext as useHasMergeStylesShadowRootContextDefault,\n  useMergeStylesShadowRootContext as useMergeStylesShadowRootContextDefault,\n} from '../hooks/useMergeStylesShadowRoot';\nimport { useMergeStylesRootStylesheets as useMergeStylesRootStylesheetsDefault } from '../hooks/useMergeStylesRootStylesheets';\nimport { useStyled as useStyledDefault } from '../hooks/useStyled';\nimport { useWindow as useWindowDefault } from '@fluentui/react-window-provider';\n\nimport type { ExtendedCSSStyleSheet } from '@fluentui/merge-styles';\nimport type { AdoptedStylesheetExHook, AdoptedStylesheetHook } from '../hooks/useAdoptedStylesheet';\nimport type { ShadowConfigHook } from '../hooks/useShadowConfig';\nimport type {\n  HasMergeStylesShadowRootContextHook,\n  MergeStylesShadowRootContetHook,\n} from '../hooks/useMergeStylesShadowRoot';\nimport type { MergeStylesRootStylesheetsHook } from '../hooks/useMergeStylesRootStylesheets';\nimport type { UseStyledHook } from '../hooks/useStyled';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  interface DocumentOrShadowRoot {\n    /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/adoptedStyleSheets) */\n    adoptedStyleSheets: CSSStyleSheet[];\n  }\n}\n\ntype UseWindowHook = () => Window | undefined;\n\nconst noop = () => false;\nconst noopShadow = () => DEFAULT_SHADOW_CONFIG;\nconst noopRootStylesheets = () => new Map();\nconst noopUndefined = () => undefined;\n\nexport type MergeStylesRootContextValue = {\n  /**\n   * Map of stylesheets available in the context.\n   */\n  stylesheets: Map<string, ExtendedCSSStyleSheet>;\n  useAdoptedStylesheetEx: AdoptedStylesheetExHook;\n  useAdoptedStylesheet: AdoptedStylesheetHook;\n  useShadowConfig: ShadowConfigHook;\n  useMergeStylesShadowRootContext: MergeStylesShadowRootContetHook;\n  useHasMergeStylesShadowRootContext: HasMergeStylesShadowRootContextHook;\n  useMergeStylesRootStylesheets: MergeStylesRootStylesheetsHook;\n  useWindow: UseWindowHook;\n  useStyled: UseStyledHook;\n};\n\nexport const MergeStylesRootContext = React.createContext<MergeStylesRootContextValue>({\n  stylesheets: new Map(),\n  useAdoptedStylesheetEx: noop,\n  useAdoptedStylesheet: noop,\n  useShadowConfig: noopShadow,\n  useMergeStylesShadowRootContext: noopUndefined,\n  useHasMergeStylesShadowRootContext: noop,\n  useMergeStylesRootStylesheets: noopRootStylesheets,\n  useWindow: noopUndefined,\n  useStyled: noopUndefined,\n});\n\nexport type MergeStylesRootProviderProps = {\n  /**\n   * Map of stylesheets available in the context.\n   */\n  stylesheets?: Map<string, ExtendedCSSStyleSheet>;\n\n  /**\n   * Optional `window` object to use for reading adopted stylesheets.\n   * Useful for multi-window scenarios.\n   */\n  window?: Window;\n\n  useAdoptedStylesheetEx?: AdoptedStylesheetExHook;\n  useAdoptedStylesheet?: AdoptedStylesheetHook;\n  useShadowConfig?: ShadowConfigHook;\n  useMergeStylesShadowRootContext?: MergeStylesShadowRootContetHook;\n  useHasMergeStylesShadowRootContext?: HasMergeStylesShadowRootContextHook;\n  useMergeStylesRootStylesheets?: MergeStylesRootStylesheetsHook;\n  useWindow?: UseWindowHook;\n  useStyled?: UseStyledHook;\n};\n\n/**\n * Root context provider for mergeStyles shadow DOM.\n * Typically this is placed at the render root of your React application.\n */\nexport const MergeStylesRootProvider: React.FC<MergeStylesRootProviderProps> = ({\n  stylesheets: userSheets,\n  window: userWindow,\n  useAdoptedStylesheet,\n  useAdoptedStylesheetEx,\n  useShadowConfig,\n  useMergeStylesShadowRootContext,\n  useHasMergeStylesShadowRootContext,\n  useMergeStylesRootStylesheets,\n  useWindow,\n  useStyled,\n  ...props\n}) => {\n  const win = userWindow ?? getWindow();\n  const [stylesheets, setStylesheets] = React.useState<Map<string, ExtendedCSSStyleSheet>>(\n    () => userSheets || new Map(),\n  );\n\n  const sheetHandler = React.useCallback(({ key, sheet }) => {\n    setStylesheets(prev => {\n      const next = new Map<string, ExtendedCSSStyleSheet>(prev);\n      next.set(key, sheet);\n      return next;\n    });\n  }, []);\n\n  // Udapte stylesheets based on user style sheet changes\n  React.useEffect(() => {\n    setStylesheets(userSheets || new Map());\n  }, [userSheets]);\n\n  // Wire up listener for adopted stylesheets\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    const sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n    const off = sheet.onAddSheet(sheetHandler);\n\n    return () => {\n      off();\n    };\n  }, [win, sheetHandler]);\n\n  // Read stylesheets from window on mount\n  React.useEffect(() => {\n    if (!win) {\n      return;\n    }\n\n    let changed = false;\n    const next = new Map<string, ExtendedCSSStyleSheet>(stylesheets);\n    const sheet = ShadowDomStylesheet.getInstance(makeShadowConfig(GLOBAL_STYLESHEET_KEY, false, win));\n\n    const adoptedSheets = sheet.getAdoptedSheets();\n\n    adoptedSheets.forEach((adoptedSheet, key) => {\n      next.set(key, adoptedSheet);\n      changed = true;\n    });\n\n    if (changed) {\n      setStylesheets(next);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const value = React.useMemo(() => {\n    return {\n      stylesheets,\n      useAdoptedStylesheet: useAdoptedStylesheet || useAdoptedStylesheetDefault,\n      useAdoptedStylesheetEx: useAdoptedStylesheetEx || useAdoptedStylesheetExDefault,\n      useShadowConfig: useShadowConfig || useShadowConfigDefault,\n      useMergeStylesShadowRootContext: useMergeStylesShadowRootContext || useMergeStylesShadowRootContextDefault,\n      useHasMergeStylesShadowRootContext:\n        useHasMergeStylesShadowRootContext || useHasMergeStylesShadowRootContextDefault,\n      useMergeStylesRootStylesheets: useMergeStylesRootStylesheets || useMergeStylesRootStylesheetsDefault,\n      useWindow: useWindow || useWindowDefault,\n      useStyled: useStyled || useStyledDefault,\n    };\n  }, [\n    stylesheets,\n    useAdoptedStylesheet,\n    useAdoptedStylesheetEx,\n    useShadowConfig,\n    useMergeStylesShadowRootContext,\n    useHasMergeStylesShadowRootContext,\n    useMergeStylesRootStylesheets,\n    useWindow,\n    useStyled,\n  ]);\n\n  return <MergeStylesRootContext.Provider value={value} {...props} />;\n};\n"]}