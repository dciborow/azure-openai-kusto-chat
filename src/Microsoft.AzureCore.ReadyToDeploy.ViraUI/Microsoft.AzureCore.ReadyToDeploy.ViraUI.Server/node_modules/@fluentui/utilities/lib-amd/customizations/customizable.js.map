{"version":3,"file":"customizable.js","sourceRoot":"../src/","sources":["customizations/customizable.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { hoistStatics } from '../hoistStatics';\nimport { CustomizerContext } from './CustomizerContext';\nimport { concatStyleSets, makeShadowConfig } from '@fluentui/merge-styles';\nimport { MergeStylesShadowRootConsumer } from '../shadowDom/contexts/MergeStylesShadowRootConsumer';\nimport { getWindow } from '../dom/getWindow';\nimport { WindowContext } from '@fluentui/react-window-provider';\nimport type { ICustomizerContext } from './CustomizerContext';\nimport type { ShadowConfig } from '@fluentui/merge-styles';\n\nimport { memoizeFunction } from '../memoize';\n\nconst memoizedMakeShadowConfig = memoizeFunction(makeShadowConfig);\nconst mergeComponentStyles = memoizeFunction(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (defaultStyles: any, componentStyles: any, shadowConfig: ShadowConfig): any => {\n    return {\n      ...defaultStyles,\n      ...componentStyles,\n      __shadowConfig__: shadowConfig,\n    };\n  },\n);\n\nexport function customizable(\n  scope: string,\n  fields: string[],\n  concatStyles?: boolean,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): <P>(ComposedComponent: React.ComponentType<P>) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function customizableFactory<P>(ComposedComponent: React.ComponentType<P>): any {\n    const resultClass = class ComponentWithInjectedProps extends React.Component<P, {}> {\n      public static displayName: string = 'Customized' + scope;\n      public static contextType = WindowContext;\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      private _styleCache: { default?: any; component?: any; merged?: any } = {};\n\n      constructor(props: P) {\n        super(props);\n\n        this._onSettingChanged = this._onSettingChanged.bind(this);\n      }\n\n      public componentDidMount(): void {\n        Customizations.observe(this._onSettingChanged);\n      }\n\n      public componentWillUnmount(): void {\n        Customizations.unobserve(this._onSettingChanged);\n      }\n\n      public render(): JSX.Element {\n        return (\n          <MergeStylesShadowRootConsumer stylesheetKey={scope}>\n            {(inShadow: boolean) => {\n              return (\n                <CustomizerContext.Consumer>\n                  {(context: ICustomizerContext) => {\n                    const defaultProps = Customizations.getSettings(fields, scope, context.customizations);\n\n                    const win = this.context.window ?? getWindow();\n                    const shadowConfig = memoizedMakeShadowConfig(scope, inShadow, win);\n\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const componentProps = this.props as any;\n\n                    // If defaultProps.styles is a function, evaluate it before calling concatStyleSets\n                    if (defaultProps.styles && typeof defaultProps.styles === 'function') {\n                      defaultProps.styles = defaultProps.styles({ ...defaultProps, ...componentProps });\n                    }\n\n                    // If concatStyles is true and custom styles have been defined compute those styles\n                    if (concatStyles && defaultProps.styles) {\n                      if (\n                        this._styleCache.default !== defaultProps.styles ||\n                        this._styleCache.component !== componentProps.styles\n                      ) {\n                        const mergedStyles = concatStyleSets(defaultProps.styles, componentProps.styles);\n                        mergedStyles.__shadowConfig__ = shadowConfig;\n                        this._styleCache.default = defaultProps.styles;\n                        this._styleCache.component = componentProps.styles;\n                        this._styleCache.merged = mergedStyles;\n                      }\n\n                      return (\n                        <ComposedComponent {...defaultProps} {...componentProps} styles={this._styleCache.merged} />\n                      );\n                    }\n\n                    const styles = mergeComponentStyles(defaultProps.styles, componentProps.styles, shadowConfig);\n\n                    return <ComposedComponent {...defaultProps} {...componentProps} styles={styles} />;\n                  }}\n                </CustomizerContext.Consumer>\n              );\n            }}\n          </MergeStylesShadowRootConsumer>\n        );\n      }\n\n      private _onSettingChanged(): void {\n        this.forceUpdate();\n      }\n    };\n\n    return hoistStatics(ComposedComponent, resultClass);\n  };\n}\n"]}