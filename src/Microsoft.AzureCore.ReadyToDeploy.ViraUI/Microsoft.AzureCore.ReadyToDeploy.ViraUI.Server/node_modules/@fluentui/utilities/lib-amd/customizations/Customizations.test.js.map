{"version":3,"file":"Customizations.test.js","sourceRoot":"../src/","sources":["customizations/Customizations.test.ts"],"names":[],"mappings":";;;IAEA,QAAQ,CAAC,gBAAgB,EAAE;QACzB,UAAU,CAAC;YACT,+BAAc,CAAC,KAAK,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE;YAChC,+BAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YAEjD,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBACrD,CAAC,EAAE,GAAG;gBACN,CAAC,EAAE,GAAG;aACP,CAAC,CAAC;YAEH,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;gBAChD,CAAC,EAAE,GAAG;aACP,CAAC,CAAC;YAEH,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6BAA6B,EAAE;YAChC,+BAAc,CAAC,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YAE9D,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC;gBAC5D,CAAC,EAAE,GAAG;gBACN,CAAC,EAAE,GAAG;aACP,CAAC,CAAC;YAEH,MAAM,CAAC,+BAAc,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kBAAkB,EAAE;YACrB,IAAI,OAAO,GAAG,CAAC,CAAC;YAChB,IAAI,UAAU,GAAG,cAAM,OAAA,OAAO,EAAE,EAAT,CAAS,CAAC;YAEjC,+BAAc,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAEnC,+BAAc,CAAC,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YAC9D,+BAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YAEjD,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,+BAAc,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAErC,+BAAc,CAAC,aAAa,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YACjD,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["import { Customizations } from './Customizations';\n\ndescribe('Customizations', () => {\n  beforeEach(() => {\n    Customizations.reset();\n  });\n\n  it('can set/get global settings', () => {\n    Customizations.applySettings({ a: 'a', b: 'b' });\n\n    expect(Customizations.getSettings(['a', 'b'])).toEqual({\n      a: 'a',\n      b: 'b',\n    });\n\n    expect(Customizations.getSettings(['a'])).toEqual({\n      a: 'a',\n    });\n\n    expect(Customizations.getSettings(['z'])).toEqual({});\n  });\n\n  it('can set/get scoped settings', () => {\n    Customizations.applyScopedSettings('Foo', { a: 'a', b: 'b' });\n\n    expect(Customizations.getSettings(['a', 'b'], 'Foo')).toEqual({\n      a: 'a',\n      b: 'b',\n    });\n\n    expect(Customizations.getSettings(['a'], 'Bar')).toEqual({});\n  });\n\n  it('can fire changes', () => {\n    let counter = 0;\n    let incCounter = () => counter++;\n\n    Customizations.observe(incCounter);\n\n    Customizations.applyScopedSettings('Foo', { a: 'a', b: 'b' });\n    Customizations.applySettings({ a: 'a', b: 'b' });\n\n    expect(counter).toEqual(2);\n    Customizations.unobserve(incCounter);\n\n    Customizations.applySettings({ a: 'a', b: 'b' });\n    expect(counter).toEqual(2);\n  });\n});\n"]}