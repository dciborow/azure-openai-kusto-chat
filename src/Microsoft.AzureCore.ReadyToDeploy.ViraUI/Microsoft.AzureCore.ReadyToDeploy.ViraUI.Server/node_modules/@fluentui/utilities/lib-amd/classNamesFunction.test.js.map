{"version":3,"file":"classNamesFunction.test.js","sourceRoot":"../src/","sources":["classNamesFunction.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Stylesheet } from '@fluentui/merge-styles';\nimport { classNamesFunction } from './classNamesFunction';\nimport { getRTL, setRTL } from './rtl';\nimport type { IStyle } from '@fluentui/merge-styles';\n\ndescribe('classNamesFunction', () => {\n  beforeEach(() => {\n    Stylesheet.getInstance().reset();\n    Stylesheet.getInstance().setConfig({\n      onInsertRule: () => {\n        /*no-op*/\n      },\n    });\n  });\n\n  afterEach(() => {\n    Stylesheet.getInstance().setConfig({\n      onInsertRule: undefined,\n    });\n  });\n\n  it('can cache rules', () => {\n    let styleFunction1Called = false;\n    let styleFunction2Called = false;\n    const getClassNames = classNamesFunction<{ a: number; b: string }, { root: IStyle }>();\n    const getStyles1 = (props: { a: number; b: string }) => {\n      styleFunction1Called = true;\n      return {\n        root: { width: props.a },\n      };\n    };\n\n    const getStyles2 = (props: { a: number; b: string }) => {\n      styleFunction2Called = true;\n      return {\n        root: { height: props.a },\n      };\n    };\n\n    const classNames1 = getClassNames(getStyles1, { a: 1, b: 'test' });\n    const classNames2 = getClassNames(getStyles2, { a: 1, b: 'test' });\n    expect(styleFunction1Called).toEqual(true);\n    expect(styleFunction2Called).toEqual(true);\n    styleFunction1Called = false;\n    styleFunction2Called = false;\n\n    expect(getClassNames(getStyles1, { a: 1, b: 'test' })).toEqual(classNames1);\n    expect(styleFunction1Called).toEqual(false);\n\n    expect(getClassNames(getStyles2, { a: 1, b: 'test' })).toEqual(classNames2);\n    expect(styleFunction2Called).toEqual(false);\n\n    expect(getClassNames(getStyles1, { a: 2, b: 'test' })).not.toEqual(classNames1);\n    expect(styleFunction1Called).toEqual(true);\n    styleFunction1Called = false;\n\n    getClassNames(getStyles1, { a: 2, b: 'test' });\n    expect(styleFunction1Called).toEqual(false);\n  });\n\n  describe('ltr/rtl from theme', () => {\n    let originalRtl: boolean;\n    let setRule: string;\n\n    beforeEach(() => {\n      Stylesheet.getInstance().setConfig({\n        onInsertRule: (rule: string) => {\n          setRule = rule;\n        },\n      });\n    });\n\n    beforeEach(() => (originalRtl = getRTL()));\n    afterEach(() => setRTL(originalRtl));\n\n    const getClassNames = classNamesFunction<{ theme: {} }, { root: IStyle }>();\n    const getStyles = () => {\n      return {\n        root: { left: 1 },\n      };\n    };\n\n    it('renders rtl if specified in theme', () => {\n      setRTL(false);\n      getClassNames(getStyles, { theme: { rtl: true } });\n      expect(setRule).toEqual('.root-0{right:1px;}');\n    });\n\n    it('renders ltr if specified in theme', () => {\n      setRTL(true);\n      getClassNames(getStyles, { theme: { rtl: false } });\n      expect(setRule).toEqual('.root-0{left:1px;}');\n    });\n  });\n});\n"]}