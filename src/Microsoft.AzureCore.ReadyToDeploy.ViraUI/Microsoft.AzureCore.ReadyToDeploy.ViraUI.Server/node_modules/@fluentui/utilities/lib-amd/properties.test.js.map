{"version":3,"file":"properties.test.js","sourceRoot":"../src/","sources":["properties.test.ts"],"names":[],"mappings":";;;IAGA,QAAQ,CAAC,gBAAgB,EAAE;QACzB,EAAE,CAAC,4BAA4B,EAAE;YAC/B,IAAI,MAAM,GAAG,IAAA,2BAAc,EACzB;gBACE,oBAAoB,EAAE,CAAC;aACxB,EACD,0BAAa,CACd,CAAC;YACF,8DAA8D;YAC9D,MAAM,CAAE,MAAc,CAAC,oBAAoB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE;YAC/B,IAAI,MAAM,GAAG,IAAA,2BAAc,EACzB;gBACE,YAAY,EAAE,CAAC;aAChB,EACD,0BAAa,CACd,CAAC;YACF,8DAA8D;YAC9D,MAAM,CAAE,MAAc,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE;YACrD,IAAI,MAAM,GAAG,IAAA,2BAAc,EACzB;gBACE,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE;oBACP,WAAW;gBACb,CAAC;gBACD,cAAc,EAAE;oBACd,WAAW;gBACb,CAAC;aACF,EACD,0BAAa,CACd,CAAC;YAEF,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACxC,MAAM,CAAC,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAElD,8DAA8D;YAC9D,MAAM,CAAC,OAAQ,MAAc,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE;YACrC,IAAI,MAAM,GAAG,IAAA,2BAAc,EACzB;gBACE,MAAM,EAAE,CAAC;gBACT,SAAS,EAAE,IAAI;aAChB,EACD,0BAAa,CACd,CAAC;YAEF,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvC,8DAA8D;YAC9D,MAAM,CAAE,MAAc,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE;YAC3B,8DAA8D;YAC9D,IAAI,MAAM,GAAG,IAAA,2BAAc,EAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAEpE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC","sourcesContent":["import { getNativeProps, divProperties } from './properties';\nimport * as React from 'react';\n\ndescribe('getNativeProps', () => {\n  it('can pass through data tags', () => {\n    let result = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(\n      {\n        'data-automation-id': 1,\n      },\n      divProperties,\n    );\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    expect((result as any)['data-automation-id']).toEqual(1);\n  });\n\n  it('can pass through aria tags', () => {\n    let result = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(\n      {\n        'aria-label': 1,\n      },\n      divProperties,\n    );\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    expect((result as any)['aria-label']).toEqual(1);\n  });\n\n  it('can pass through basic div properties and events', () => {\n    let result = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(\n      {\n        className: 'foo',\n        onClick: () => {\n          /* no-op */\n        },\n        onClickCapture: () => {\n          /* no-op */\n        },\n      },\n      divProperties,\n    );\n\n    expect(result.className).toEqual('foo');\n    expect(typeof result.onClick).toEqual('function');\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    expect(typeof (result as any).onClickCapture).toEqual('function');\n  });\n\n  it('can remove unexpected properties', () => {\n    let result = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(\n      {\n        foobar: 1,\n        className: 'hi',\n      },\n      divProperties,\n    );\n\n    expect(result.className).toEqual('hi');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    expect((result as any).foobar).toEqual(undefined);\n  });\n\n  it('can exclude properties', () => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let result = getNativeProps<any>({ a: 1, b: 2 }, ['a', 'b'], ['b']);\n\n    expect(result.a).toBeDefined();\n    expect(result.b).toBeUndefined();\n  });\n});\n"]}