import { addDirectionalKeyCode, isDirectionalKeyCode, removeDirectionalKeyCode } from './keyboard';
import { KeyCodes } from './KeyCodes';
describe('isDirectionalKeyCode', function () {
    it('can return the expected value', function () {
        expect(isDirectionalKeyCode(KeyCodes.up)).toBe(true);
        expect(isDirectionalKeyCode(KeyCodes.enter)).toBe(false);
    });
});
describe('addDirectionalKeyCode', function () {
    it('can register addition of custom keycodes', function () {
        expect(isDirectionalKeyCode(KeyCodes.f6)).toBe(false);
        addDirectionalKeyCode(KeyCodes.f6);
        expect(isDirectionalKeyCode(KeyCodes.f6)).toBe(true);
    });
});
describe('removeDirectionalKeyCode', function () {
    it('can remove a custom keycode', function () {
        expect(isDirectionalKeyCode(KeyCodes.up)).toBe(true);
        removeDirectionalKeyCode(KeyCodes.up);
        expect(isDirectionalKeyCode(KeyCodes.up)).toBe(false);
    });
});
//# sourceMappingURL=keyboard.test.js.map