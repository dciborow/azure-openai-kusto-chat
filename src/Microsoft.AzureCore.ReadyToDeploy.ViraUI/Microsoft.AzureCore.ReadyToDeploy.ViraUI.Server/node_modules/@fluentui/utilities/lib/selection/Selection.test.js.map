{"version":3,"file":"Selection.test.js","sourceRoot":"../src/","sources":["selection/Selection.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { Selection } from './Selection';\nimport { SelectionMode } from './Selection.types';\nimport type { IObjectWithKey } from './Selection.types';\n\nconst setA = [{ key: 'a' }, { key: 'b' }, { key: 'c' }];\nconst setB = [{ key: 'a' }, { key: 'd' }, { key: 'b' }];\n\ndescribe('Selection', () => {\n  const onSelectionChanged = jest.fn();\n\n  afterEach(() => {\n    onSelectionChanged.mockClear();\n  });\n\n  it('initializes selected count', () => {\n    const selection = new Selection();\n    expect(selection.count).toBe(0);\n  });\n\n  it('can receive items', () => {\n    const selection = new Selection({ onSelectionChanged, items: setA });\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(0);\n\n    selection.setKeySelected('a', true, true);\n    selection.setKeySelected('a', true, true);\n    selection.setIndexSelected(0, true, true);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n  });\n\n  it('fires change events only when selection changes occur', () => {\n    const selection = new Selection({ onSelectionChanged });\n\n    selection.setItems(setA, false);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(0);\n\n    selection.setKeySelected('a', true, true);\n    selection.setKeySelected('a', true, true);\n    selection.setIndexSelected(0, true, true);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n\n    // Switch to set b, which also contains item a, in the same position. No change event should occur.\n    selection.setItems(setB, false);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n\n    // Select b\n    selection.setKeySelected('b', true, true);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(2);\n\n    // Change back to set a, which has item b in a different index.\n    selection.setItems(setA, false);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(3);\n\n    // Change to set b, but clear it.\n    selection.setItems(setB, true);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(4);\n\n    // Select an item in set b that doesn't exist in set a, then switch to set a.\n    selection.setKeySelected('d', true, true);\n    selection.setItems(setA, false);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(6);\n\n    // Select an item, clear, clear again.\n    selection.setAllSelected(true);\n    selection.setAllSelected(true);\n    selection.setAllSelected(false);\n    selection.setAllSelected(false);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(8);\n\n    selection.setIndexSelected(0, true, true);\n    selection.selectToIndex(2, true);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(10);\n  });\n\n  it('returns false on isAllSelected when no items are selectable', () => {\n    const selection = new Selection({\n      canSelectItem: () => false,\n      onSelectionChanged,\n      items: setA,\n    });\n\n    expect(selection.isAllSelected()).toEqual(false);\n\n    selection.setAllSelected(true);\n\n    expect(selection.isAllSelected()).toEqual(false);\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(0);\n  });\n\n  it('resets unselectable count on setting new items', () => {\n    let canSelect = false;\n    const selection = new Selection({\n      canSelectItem: () => canSelect,\n      items: setA,\n    });\n\n    expect(selection.isAllSelected()).toEqual(false);\n    selection.setAllSelected(true);\n    expect(selection.isAllSelected()).toEqual(false);\n\n    canSelect = true;\n    selection.setItems(setA);\n    selection.setAllSelected(true);\n    expect(selection.isAllSelected()).toEqual(true);\n  });\n\n  it('notifies consumers when all items are selected and some are removed', () => {\n    const selection = new Selection({\n      onSelectionChanged,\n      items: setA,\n    });\n\n    selection.setAllSelected(true);\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n    expect(selection.getSelectedCount()).toEqual(3);\n\n    selection.setItems([{ key: 'a' }, { key: 'b' }], false);\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(2);\n    expect(selection.getSelectedCount()).toEqual(2);\n\n    selection.setItems([], false);\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(3);\n    expect(selection.getSelectedCount()).toEqual(0);\n  });\n\n  it('notifies consumers when some items are selected and some are removed', () => {\n    const selection = new Selection({\n      onSelectionChanged,\n      items: setA,\n    });\n\n    selection.setIndexSelected(2, true, false);\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n    expect(selection.count).toEqual(1);\n\n    selection.setItems([{ key: 'a' }, { key: 'b' }], false);\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(2);\n    expect(selection.count).toEqual(0);\n  });\n\n  it('allows custom item type', () => {\n    interface ICustomItem {\n      id: string;\n    }\n    const items: ICustomItem[] = [{ id: 'a' }, { id: 'b' }];\n    const selection = new Selection<ICustomItem>({\n      onSelectionChanged,\n      getKey: (item: ICustomItem) => item.id,\n      items,\n    });\n\n    selection.setKeySelected('a', true, true);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n  });\n\n  it('respects 0 as selected key', () => {\n    const items: IObjectWithKey[] = [{ key: 1 }, { key: 0 }];\n    const selection = new Selection({ items, selectionMode: SelectionMode.multiple });\n\n    expect(selection.isKeySelected('0')).toBe(false);\n\n    selection.setKeySelected('0', true, false);\n    expect(selection.getSelectedIndices()).toEqual([1]);\n    expect(selection.getSelection()).toEqual([{ key: 0 }]);\n    expect(selection.isKeySelected('0')).toBe(true);\n    expect(selection.isIndexSelected(1)).toBe(true);\n\n    selection.toggleKeySelected('0');\n    expect(selection.isKeySelected('0')).toBe(false);\n    expect(selection.getSelection()).toEqual([]);\n\n    selection.setIndexSelected(0, false, true); // hack to reset anchor\n    selection.selectToKey('0');\n    expect(selection.getSelectedIndices()).toEqual([0, 1]);\n  });\n\n  it('allows selection to be pre-initialized', () => {\n    const items1: IObjectWithKey[] = [{ key: 'a' }, { key: 'b' }];\n\n    // Add a callback to make sure an item always shows as selected if present.\n    // The expectation is that the change to selection is merged with the existing update.\n    const onItemsChanged = jest.fn(() => {\n      selection.setKeySelected('b', true, false);\n    });\n\n    const selection = new Selection({\n      items: [] as IObjectWithKey[],\n      selectionMode: SelectionMode.multiple,\n      onItemsChanged,\n      onSelectionChanged,\n    });\n\n    expect(onSelectionChanged).toHaveBeenCalledTimes(0);\n    expect(onItemsChanged).toHaveBeenCalledTimes(0);\n\n    expect(selection.getSelection()).toEqual([]);\n\n    selection.setItems(items1);\n\n    expect(onItemsChanged).toHaveBeenCalledTimes(1);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(1);\n\n    expect(selection.getSelection()).toEqual([{ key: 'b' }]);\n\n    selection.setKeySelected('a', true, false);\n\n    expect(onItemsChanged).toHaveBeenCalledTimes(1);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(2);\n\n    expect(selection.getSelection()).toEqual([{ key: 'a' }, { key: 'b' }]);\n\n    const items2: IObjectWithKey[] = [{ key: 'c' }, { key: 'd' }];\n\n    // Change the set of items such that the 'selected' item is no longer present.\n    selection.setItems(items2);\n\n    expect(onItemsChanged).toHaveBeenCalledTimes(2);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(3);\n\n    expect(selection.getSelection()).toEqual([]);\n\n    selection.setItems(items1);\n\n    expect(onItemsChanged).toHaveBeenCalledTimes(3);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(4);\n\n    expect(selection.getSelection()).toEqual([{ key: 'b' }]);\n\n    // Set an item as selected, then flip their order, within the same change event.\n    selection.setChangeEvents(false);\n    selection.setKeySelected('a', true, false);\n    selection.setItems([{ key: 'b' }, { key: 'a' }], false);\n    selection.setChangeEvents(true);\n\n    expect(onItemsChanged).toHaveBeenCalledTimes(4);\n    expect(onSelectionChanged).toHaveBeenCalledTimes(5);\n\n    expect(selection.getSelection()).toEqual([{ key: 'b' }, { key: 'a' }]);\n  });\n});\n"]}