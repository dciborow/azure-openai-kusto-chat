{"version":3,"file":"elementContainsAttribute.js","sourceRoot":"../src/","sources":["elementContainsAttribute.ts"],"names":[],"mappings":";;;;IAEA;;;;;OAKG;IACH,SAAgB,wBAAwB,CAAC,OAAoB,EAAE,SAAiB,EAAE,GAAc;QAC9F,IAAM,YAAY,GAAG,IAAA,2CAAoB,EACvC,OAAO,EACP,UAAC,WAAwB,IAAK,OAAA,WAAW,CAAC,YAAY,CAAC,SAAS,CAAC,EAAnC,CAAmC,EACjE,GAAG,CACJ,CAAC;QAEF,OAAO,YAAY,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IARD,4DAQC","sourcesContent":["import { findElementRecursive } from './findElementRecursive';\n\n/**\n * Determines if an element, or any of its ancestors, contain the given attribute\n * @param element - element to start searching at\n * @param attribute - the attribute to search for\n * @returns the value of the first instance found\n */\nexport function elementContainsAttribute(element: HTMLElement, attribute: string, doc?: Document): string | null {\n  const elementMatch = findElementRecursive(\n    element,\n    (testElement: HTMLElement) => testElement.hasAttribute(attribute),\n    doc,\n  );\n\n  return elementMatch && elementMatch.getAttribute(attribute);\n}\n"]}