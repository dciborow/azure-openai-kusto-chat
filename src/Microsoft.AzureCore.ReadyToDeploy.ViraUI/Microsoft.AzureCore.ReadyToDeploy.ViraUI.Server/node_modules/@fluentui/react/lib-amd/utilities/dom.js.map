{"version":3,"file":"dom.js","sourceRoot":"../src/","sources":["utilities/dom.ts"],"names":[],"mappings":";;;;IAEA;;;;;;;;OAQG;IAEH;;;;OAIG;IACI,IAAM,aAAa,GAAG;;QAC3B,iDAAiD;QACjD,OAAO,MAAA,IAAA,mCAAW,GAAE,mCAAI,CAAC,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACnF,CAAC,CAAC;IAHW,QAAA,aAAa,iBAGxB;IAEF;;;;OAIG;IACI,IAAM,WAAW,GAAG;;QACzB,iDAAiD;QACjD,OAAO,MAAA,IAAA,iCAAS,GAAE,mCAAI,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC,CAAC;IAHW,QAAA,WAAW,eAGtB;IAEF;;;;;;OAMG;IACI,IAAM,aAAa,GAAG,UAAC,GAAoD;;QAChF,iDAAiD;QACjD,OAAO,MAAA,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,0CAAE,QAAQ,mCAAI,CAAC,OAAO,QAAQ,KAAK,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC3F,CAAC,CAAC;IAHW,QAAA,aAAa,iBAGxB;IAEF;;;;;;OAMG;IACI,IAAM,WAAW,GAAG,UAAC,GAAoD;;QAC9E,iDAAiD;QACjD,OAAO,MAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,mCAAI,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAC7E,CAAC,CAAC;IAHW,QAAA,WAAW,eAGtB","sourcesContent":["import { useDocument, useWindow, WindowProviderProps } from '@fluentui/react-window-provider';\n\n/**\n * NOTE: the check for `window`/`document` is a bit verbose and perhaps\n * overkill but it ensures the prior assumbed behavior of directly\n * calling `window`/`document` is preserved.\n *\n * It is possible to set `window` to undefined on `WindowProvider` so\n * we'll fallback to directly accessing the global in that (hopefully unlikely)\n * case.\n */\n\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React function components.\n * @returns Document | undefined\n */\nexport const useDocumentEx = () => {\n  // eslint-disable-next-line no-restricted-globals\n  return useDocument() ?? (typeof document !== 'undefined' ? document : undefined);\n};\n\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React function components.\n * @returns Window | undefined\n */\nexport const useWindowEx = () => {\n  // eslint-disable-next-line no-restricted-globals\n  return useWindow() ?? (typeof window !== 'undefined' ? window : undefined);\n};\n\n/**\n * Get a reference to the `document` object.\n * Use this in place of the global `document` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Document | undefined\n */\nexport const getDocumentEx = (ctx: Pick<WindowProviderProps, 'window'> | undefined) => {\n  // eslint-disable-next-line no-restricted-globals\n  return ctx?.window?.document ?? (typeof document !== 'undefined' ? document : undefined);\n};\n\n/**\n * Get a reference to the `window` object.\n * Use this in place of the global `window` in React class components.\n *\n * @param ctx - Class component WindowContext\n * @returns Window | undefined\n */\nexport const getWindowEx = (ctx: Pick<WindowProviderProps, 'window'> | undefined) => {\n  // eslint-disable-next-line no-restricted-globals\n  return ctx?.window ?? (typeof window !== 'undefined' ? window : undefined);\n};\n"]}