define(["require", "exports", "../../Utilities", "../../Styling"], function (require, exports, Utilities_1, Styling_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getComboBoxOptionClassNames = exports.getClassNames = void 0;
    exports.getClassNames = (0, Utilities_1.memoizeFunction)(function (styles, className, isOpen, disabled, required, focused, allowFreeForm, hasErrorMessage) {
        // const mergeStyles = mergeStylesShadow(styles.__shadowConfig__);
        return {
            container: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-container', className, styles.container),
            label: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, styles.label, disabled && styles.labelDisabled),
            root: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox', hasErrorMessage ? styles.rootError : isOpen && 'is-open', required && 'is-required', styles.root, !allowFreeForm && styles.rootDisallowFreeForm, hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused, !disabled && {
                selectors: {
                    ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,
                    ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,
                    ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused,
                },
            }, disabled && ['is-disabled', styles.rootDisabled]),
            input: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),
            errorMessage: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, styles.errorMessage),
            callout: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-callout', styles.callout),
            optionsContainerWrapper: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-optionsContainerWrapper', styles.optionsContainerWrapper),
            optionsContainer: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-optionsContainer', styles.optionsContainer),
            header: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-header', styles.header),
            divider: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-divider', styles.divider),
            screenReaderText: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, styles.screenReaderText),
        };
    });
    exports.getComboBoxOptionClassNames = (0, Utilities_1.memoizeFunction)(function (styles) {
        return {
            optionText: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-optionText', styles.optionText),
            root: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, 'ms-ComboBox-option', styles.root, {
                selectors: {
                    ':hover': styles.rootHovered,
                    ':focus': styles.rootFocused,
                    ':active': styles.rootPressed,
                },
            }),
            optionTextWrapper: (0, Styling_1.mergeStyles)(styles.__shadowConfig__, styles.optionTextWrapper),
        };
    });
});
//# sourceMappingURL=ComboBox.classNames.js.map