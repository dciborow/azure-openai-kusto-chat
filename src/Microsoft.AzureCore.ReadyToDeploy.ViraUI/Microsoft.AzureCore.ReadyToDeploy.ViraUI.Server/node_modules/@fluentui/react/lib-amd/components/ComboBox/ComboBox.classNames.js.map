{"version":3,"file":"ComboBox.classNames.js","sourceRoot":"../src/","sources":["components/ComboBox/ComboBox.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nimport type { IComboBoxStyles, IComboBoxOptionStyles } from './ComboBox.types';\n\nexport interface IComboBoxClassNames {\n  container: string;\n  label: string;\n  root: string;\n  input: string;\n  errorMessage: string;\n  callout: string;\n  optionsContainer: string;\n  header: string;\n  divider: string;\n  optionsContainerWrapper: string;\n  screenReaderText: string;\n}\n\nexport interface IComboBoxOptionClassNames {\n  optionText: string;\n  root: string;\n  optionTextWrapper: string;\n}\n\nexport const getClassNames = memoizeFunction(\n  (\n    styles: Partial<IComboBoxStyles>,\n    className: string,\n    isOpen: boolean,\n    disabled: boolean,\n    required: boolean,\n    focused: boolean,\n    allowFreeForm: boolean,\n    hasErrorMessage: boolean,\n  ): IComboBoxClassNames => {\n    // const mergeStyles = mergeStylesShadow(styles.__shadowConfig__);\n\n    return {\n      container: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-container', className, styles.container),\n      label: mergeStyles(styles.__shadowConfig__, styles.label, disabled && styles.labelDisabled),\n      root: mergeStyles(\n        styles.__shadowConfig__,\n        'ms-ComboBox',\n        hasErrorMessage ? styles.rootError : isOpen && 'is-open',\n        required && 'is-required',\n        styles.root,\n        !allowFreeForm && styles.rootDisallowFreeForm,\n        hasErrorMessage && !focused ? styles.rootError : !disabled && focused && styles.rootFocused,\n        !disabled && {\n          selectors: {\n            ':hover': hasErrorMessage ? styles.rootError : !isOpen && !focused && styles.rootHovered,\n            ':active': hasErrorMessage ? styles.rootError : styles.rootPressed,\n            ':focus': hasErrorMessage ? styles.rootError : styles.rootFocused,\n          },\n        },\n        disabled && ['is-disabled', styles.rootDisabled],\n      ),\n      input: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-Input', styles.input, disabled && styles.inputDisabled),\n      errorMessage: mergeStyles(styles.__shadowConfig__, styles.errorMessage),\n      callout: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-callout', styles.callout),\n      optionsContainerWrapper: mergeStyles(\n        styles.__shadowConfig__,\n        'ms-ComboBox-optionsContainerWrapper',\n        styles.optionsContainerWrapper,\n      ),\n      optionsContainer: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionsContainer', styles.optionsContainer),\n      header: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-header', styles.header),\n      divider: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-divider', styles.divider),\n      screenReaderText: mergeStyles(styles.__shadowConfig__, styles.screenReaderText),\n    };\n  },\n);\n\nexport const getComboBoxOptionClassNames = memoizeFunction(\n  (styles: Partial<IComboBoxOptionStyles>): IComboBoxOptionClassNames => {\n    return {\n      optionText: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-optionText', styles.optionText),\n      root: mergeStyles(styles.__shadowConfig__, 'ms-ComboBox-option', styles.root, {\n        selectors: {\n          ':hover': styles.rootHovered,\n          ':focus': styles.rootFocused,\n          ':active': styles.rootPressed,\n        },\n      }),\n      optionTextWrapper: mergeStyles(styles.__shadowConfig__, styles.optionTextWrapper),\n    };\n  },\n);\n"]}