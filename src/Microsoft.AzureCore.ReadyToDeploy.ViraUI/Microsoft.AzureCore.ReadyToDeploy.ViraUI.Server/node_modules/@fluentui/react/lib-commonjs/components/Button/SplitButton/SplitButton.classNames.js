"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSplitButtonClassNames = exports.SplitButtonGlobalClassNames = void 0;
var Utilities_1 = require("../../../Utilities");
var Styling_1 = require("../../../Styling");
exports.SplitButtonGlobalClassNames = {
    msSplitButtonDivider: 'ms-SplitButton-divider',
};
exports.getSplitButtonClassNames = (0, Utilities_1.memoizeFunction)(function (styles, disabled, expanded, checked, primaryDisabled) {
    return {
        root: (0, Styling_1.mergeStyles)(styles.splitButtonMenuButton, expanded && [styles.splitButtonMenuButtonExpanded], disabled && [styles.splitButtonMenuButtonDisabled], checked && !disabled && [styles.splitButtonMenuButtonChecked], primaryDisabled &&
            !disabled && [
            {
                ':focus': styles.splitButtonMenuFocused,
            },
        ]),
        splitButtonContainer: (0, Styling_1.mergeStyles)(styles.splitButtonContainer, !disabled &&
            checked && [
            styles.splitButtonContainerChecked,
            {
                ':hover': styles.splitButtonContainerCheckedHovered,
            },
        ], !disabled &&
            !checked && [
            {
                ':hover': styles.splitButtonContainerHovered,
                ':focus': styles.splitButtonContainerFocused,
            },
        ], disabled && styles.splitButtonContainerDisabled),
        icon: (0, Styling_1.mergeStyles)(styles.splitButtonMenuIcon, disabled && styles.splitButtonMenuIconDisabled, !disabled && primaryDisabled && styles.splitButtonMenuIcon),
        flexContainer: (0, Styling_1.mergeStyles)(styles.splitButtonFlexContainer),
        divider: (0, Styling_1.mergeStyles)(exports.SplitButtonGlobalClassNames.msSplitButtonDivider, styles.splitButtonDivider, (primaryDisabled || disabled) && styles.splitButtonDividerDisabled),
    };
});
//# sourceMappingURL=SplitButton.classNames.js.map