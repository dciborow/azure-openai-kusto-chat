{"version":3,"file":"ShadowDomStylesheet.js","sourceRoot":"../src/","sources":["ShadowDomStylesheet.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint no-restricted-globals: 0 */\nimport { InjectionMode, STYLESHEET_SETTING, Stylesheet } from './Stylesheet';\nimport { DEFAULT_SHADOW_CONFIG, GLOBAL_STYLESHEET_KEY, SHADOW_DOM_STYLESHEET_SETTING } from './shadowConfig';\n\nimport type {\n  ExtendedCSSStyleSheet,\n  ISerializedStylesheet,\n  IStyleSheetConfig,\n  WindowWithMergeStyles,\n} from './Stylesheet';\nimport type { ShadowConfig } from './shadowConfig';\n\nexport const SUPPORTS_CONSTRUCTABLE_STYLESHEETS =\n  typeof document !== 'undefined' && Array.isArray(document.adoptedStyleSheets) && 'replace' in CSSStyleSheet.prototype;\n\nlet supportsModifyingAdoptedStyleSheets = false;\n\nif (SUPPORTS_CONSTRUCTABLE_STYLESHEETS) {\n  try {\n    document.adoptedStyleSheets.push();\n    supportsModifyingAdoptedStyleSheets = true;\n  } catch (e) {\n    supportsModifyingAdoptedStyleSheets = false;\n  }\n}\n\nexport const SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS = supportsModifyingAdoptedStyleSheets;\n\nlet _stylesheet: ShadowDomStylesheet | undefined;\n\nlet _global: WindowWithMergeStyles = {};\n\n// Grab window.\ntry {\n  // Why the cast?\n  // if compiled/type checked in same program with `@fluentui/font-icons-mdl2` which extends `Window` on global\n  // ( check packages/font-icons-mdl2/src/index.ts ) the definitions don't match! Thus the need of this extra assertion\n  _global = (window || {}) as WindowWithMergeStyles;\n} catch {\n  /* leave as blank object */\n}\n\nexport type AddSheetCallback = ({ key, sheet }: { key: string; sheet: ExtendedCSSStyleSheet }) => void;\n\nconst copyOldGlobalRules = (\n  stylesheet: ShadowDomStylesheet,\n  inShadow: boolean = false,\n  win: Window | undefined,\n  doc: Document | undefined,\n) => {\n  if (!doc) {\n    // SSR\n    return;\n  }\n\n  const oldGlobalRules = doc.querySelectorAll('[data-merge-styles]');\n  if (oldGlobalRules) {\n    stylesheet.setConfig({\n      window: win,\n      inShadow,\n      stylesheetKey: GLOBAL_STYLESHEET_KEY,\n    });\n\n    for (let i = 0; i < oldGlobalRules.length; i++) {\n      const styleElem = oldGlobalRules[i] as HTMLStyleElement;\n      styleElem.setAttribute('data-merge-styles-global', 'true');\n      const cssRules = styleElem.sheet?.cssRules || [];\n\n      for (let j = 0; j < cssRules.length; j++) {\n        const rule = cssRules[j];\n        stylesheet.insertRule(rule.cssText);\n      }\n    }\n  }\n};\n\nexport class ShadowDomStylesheet extends Stylesheet {\n  private _onAddSheetCallbacks: AddSheetCallback[] = [];\n  private _adoptableSheets: Map<string, ExtendedCSSStyleSheet>;\n  private _sheetCounter = 0;\n\n  public static getInstance(shadowConfig?: ShadowConfig): ShadowDomStylesheet {\n    const sConfig = shadowConfig || DEFAULT_SHADOW_CONFIG;\n    const stylesheetKey = sConfig.stylesheetKey || GLOBAL_STYLESHEET_KEY;\n    const inShadow = sConfig.inShadow;\n    const win = sConfig.window || (typeof window !== 'undefined' ? window : undefined);\n    const global = (win || _global) as WindowWithMergeStyles;\n    const doc = win ? win.document : typeof document !== 'undefined' ? document : undefined;\n\n    _stylesheet = global[STYLESHEET_SETTING] as ShadowDomStylesheet;\n\n    // When an app has multiple versions of Fluent v8 it is possible\n    // that an older version of Stylesheet is initialized before\n    // the version that supports shadow DOM. We check for this case\n    // and re-initialize the stylesheet in that case.\n    const oldStylesheetInitializedFirst = _stylesheet && !_stylesheet.getAdoptedSheets;\n\n    if (\n      !_stylesheet ||\n      oldStylesheetInitializedFirst ||\n      (_stylesheet._lastStyleElement && _stylesheet._lastStyleElement.ownerDocument !== doc)\n    ) {\n      const fabricConfig = global?.FabricConfig || {};\n      const defaultMergeStyles = {\n        window: win,\n        inShadow,\n        stylesheetKey,\n      };\n      fabricConfig.mergeStyles = fabricConfig.mergeStyles || {};\n      fabricConfig.mergeStyles = { ...defaultMergeStyles, ...fabricConfig.mergeStyles };\n\n      let stylesheet: ShadowDomStylesheet;\n      if (oldStylesheetInitializedFirst) {\n        stylesheet = new ShadowDomStylesheet(fabricConfig.mergeStyles, JSON.parse(_stylesheet.serialize()));\n        copyOldGlobalRules(stylesheet, inShadow, win, doc);\n      } else {\n        stylesheet = new ShadowDomStylesheet(fabricConfig.mergeStyles, fabricConfig.serializedStylesheet);\n      }\n\n      _stylesheet = stylesheet;\n      global[STYLESHEET_SETTING] = _stylesheet;\n    } else {\n      _stylesheet.setConfig({\n        window: win,\n        inShadow,\n        stylesheetKey,\n      });\n    }\n    if (win) {\n      _stylesheet._getAdoptableStyleSheet(stylesheetKey);\n    }\n\n    return _stylesheet;\n  }\n\n  constructor(config?: IStyleSheetConfig, serializedStylesheet?: ISerializedStylesheet) {\n    super(config, serializedStylesheet);\n\n    this._adoptableSheets = new Map();\n\n    _global[SHADOW_DOM_STYLESHEET_SETTING] = ShadowDomStylesheet;\n  }\n\n  public getAdoptedSheets(): Map<string, ExtendedCSSStyleSheet> {\n    return this._adoptableSheets;\n  }\n\n  public onAddSheet(callback: AddSheetCallback): Function {\n    this._onAddSheetCallbacks.push(callback);\n\n    return () => {\n      this._onAddSheetCallbacks = this._onAddSheetCallbacks.filter(cb => cb !== callback);\n    };\n  }\n\n  public insertRule(rule: string, preserve?: boolean): void {\n    const { injectionMode, stylesheetKey = GLOBAL_STYLESHEET_KEY } = this._config;\n\n    const injectStyles = injectionMode !== InjectionMode.none;\n    const addToConstructableStylesheet =\n      stylesheetKey === GLOBAL_STYLESHEET_KEY || !!this._adoptableSheets.has(stylesheetKey);\n\n    let constructableSheet: CSSStyleSheet | undefined = undefined;\n\n    if (injectStyles && addToConstructableStylesheet) {\n      constructableSheet = this._getAdoptableStyleSheet(stylesheetKey);\n    }\n\n    if (constructableSheet) {\n      this._insertRuleIntoSheet(constructableSheet, rule);\n    }\n\n    super.insertRule(rule, preserve, stylesheetKey);\n  }\n\n  protected _getCacheKey(key: string): string {\n    const { inShadow = false, stylesheetKey: currentStylesheetKey = GLOBAL_STYLESHEET_KEY } = this._config;\n\n    if (inShadow) {\n      return `__${currentStylesheetKey}__${key}`;\n    }\n\n    return super._getCacheKey(key);\n  }\n\n  protected _createStyleElement(): HTMLStyleElement {\n    const styleElement = super._createStyleElement();\n\n    if (this._config.stylesheetKey === GLOBAL_STYLESHEET_KEY) {\n      styleElement.setAttribute('data-merge-styles-global', 'true');\n    }\n\n    return styleElement;\n  }\n\n  private _makeCSSStyleSheet(): ExtendedCSSStyleSheet {\n    const win = this._config.window || window;\n    let sheet: ExtendedCSSStyleSheet | undefined = undefined;\n    if (!SUPPORTS_CONSTRUCTABLE_STYLESHEETS) {\n      const style = this._createStyleElement();\n      sheet = style.sheet as ExtendedCSSStyleSheet;\n    } else {\n      sheet = new (win as Window & typeof globalThis).CSSStyleSheet() as ExtendedCSSStyleSheet;\n    }\n\n    if (sheet) {\n      sheet.bucketName = 'merge-styles';\n      sheet.metadata = {\n        stylesheetKey: this._config.stylesheetKey || GLOBAL_STYLESHEET_KEY,\n        sortOrder: this._sheetCounter++,\n      };\n    }\n\n    return sheet;\n  }\n\n  private _addAdoptableStyleSheet(key: string, sheet: ExtendedCSSStyleSheet, queue: boolean = true): void {\n    if (!this._adoptableSheets.has(key)) {\n      this._adoptableSheets.set(key, sheet);\n      const win = this._config.window;\n      if (queue && win) {\n        win.queueMicrotask(() => {\n          this._onAddSheetCallbacks.forEach(callback => callback({ key, sheet }));\n        });\n      }\n    }\n  }\n\n  private _getAdoptableStyleSheet(key: string): ExtendedCSSStyleSheet {\n    let sheet = this._adoptableSheets.get(key);\n    if (!sheet) {\n      sheet = this._makeCSSStyleSheet();\n      this._addAdoptableStyleSheet(key, sheet);\n    }\n\n    return sheet;\n  }\n}\n"]}