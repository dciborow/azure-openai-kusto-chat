{"version":3,"file":"ShadowDomStylesheet.js","sourceRoot":"../src/","sources":["ShadowDomStylesheet.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint no-restricted-globals: 0 */\nimport { InjectionMode, STYLESHEET_SETTING, Stylesheet } from './Stylesheet';\nimport { DEFAULT_SHADOW_CONFIG, GLOBAL_STYLESHEET_KEY, SHADOW_DOM_STYLESHEET_SETTING } from './shadowConfig';\n\nimport type {\n  ExtendedCSSStyleSheet,\n  ISerializedStylesheet,\n  IStyleSheetConfig,\n  WindowWithMergeStyles,\n} from './Stylesheet';\nimport type { ShadowConfig } from './shadowConfig';\n\nexport const SUPPORTS_CONSTRUCTABLE_STYLESHEETS =\n  typeof document !== 'undefined' && Array.isArray(document.adoptedStyleSheets) && 'replace' in CSSStyleSheet.prototype;\n\nlet supportsModifyingAdoptedStyleSheets = false;\n\nif (SUPPORTS_CONSTRUCTABLE_STYLESHEETS) {\n  try {\n    document.adoptedStyleSheets.push();\n    supportsModifyingAdoptedStyleSheets = true;\n  } catch (e) {\n    supportsModifyingAdoptedStyleSheets = false;\n  }\n}\n\nexport const SUPPORTS_MODIFYING_ADOPTED_STYLESHEETS = supportsModifyingAdoptedStyleSheets;\n\nlet _stylesheet: ShadowDomStylesheet | undefined;\n\nlet _global: WindowWithMergeStyles = {};\n\n// Grab window.\ntry {\n  // Why the cast?\n  // if compiled/type checked in same program with `@fluentui/font-icons-mdl2` which extends `Window` on global\n  // ( check packages/font-icons-mdl2/src/index.ts ) the definitions don't match! Thus the need of this extra assertion\n  _global = (window || {}) as WindowWithMergeStyles;\n} catch {\n  /* leave as blank object */\n}\n\nexport type AddSheetCallback = ({ key, sheet }: { key: string; sheet: ExtendedCSSStyleSheet }) => void;\n\nconst copyOldGlobalRules = (\n  stylesheet: ShadowDomStylesheet,\n  inShadow: boolean = false,\n  win: Window | undefined,\n  doc: Document | undefined,\n) => {\n  if (!doc) {\n    // SSR\n    return;\n  }\n\n  const oldGlobalRules = doc.querySelectorAll('[data-merge-styles]');\n  if (oldGlobalRules) {\n    stylesheet.setConfig({\n      window: win,\n      inShadow,\n      stylesheetKey: GLOBAL_STYLESHEET_KEY,\n    });\n\n    for (let i = 0; i < oldGlobalRules.length; i++) {\n      const styleElem = oldGlobalRules[i] as HTMLStyleElement;\n      styleElem.setAttribute('data-merge-styles-global', 'true');\n      const cssRules = styleElem.sheet?.cssRules || [];\n\n      for (let j = 0; j < cssRules.length; j++) {\n        const rule = cssRules[j];\n        stylesheet.insertRule(rule.cssText);\n      }\n    }\n  }\n};\n\nexport class ShadowDomStylesheet extends Stylesheet {\n  private _onAddSheetCallbacks: AddSheetCallback[] = [];\n  private _adoptableSheets: Map<string, ExtendedCSSStyleSheet>;\n  private _sheetCounter = 0;\n\n  public static getInstance(shadowConfig?: ShadowConfig): ShadowDomStylesheet {\n    const sConfig = shadowConfig || DEFAULT_SHADOW_CONFIG;\n    const stylesheetKey = sConfig.stylesheetKey || GLOBAL_STYLESHEET_KEY;\n    const inShadow = sConfig.inShadow;\n    const win = sConfig.window || (typeof window !== 'undefined' ? window : undefined);\n    const global = (win || _global) as WindowWithMergeStyles;\n    const doc = win ? win.document : typeof document !== 'undefined' ? document : undefined;\n\n    _stylesheet = global[STYLESHEET_SETTING] as ShadowDomStylesheet;\n\n    // When an app has multiple versions of Fluent v8 it is possible\n    // that an older version of Stylesheet is initialized before\n    // the version that supports shadow DOM. We check for this case\n    // and re-initialize the stylesheet in that case.\n    const oldStylesheetInitializedFirst = _stylesheet && !_stylesheet.getAdoptedSheets;\n\n    if (\n      !_stylesheet ||\n      oldStylesheetInitializedFirst ||\n      (_stylesheet._lastStyleElement && _stylesheet._lastStyleElement.ownerDocument !== doc)\n    ) {\n      const fabricConfig = global?.FabricConfig || {};\n      const defaultMergeStyles = {\n        window: win,\n        inShadow,\n        stylesheetKey,\n      };\n      fabricConfig.mergeStyles = fabricConfig.mergeStyles || {};\n      fabricConfig.mergeStyles = { ...defaultMergeStyles, ...fabricConfig.mergeStyles };\n\n      let stylesheet: ShadowDomStylesheet;\n      if (oldStylesheetInitializedFirst) {\n        stylesheet = new ShadowDomStylesheet(fabricConfig.mergeStyles, JSON.parse(_stylesheet.serialize()));\n        copyOldGlobalRules(stylesheet, inShadow, win, doc);\n      } else {\n        stylesheet = new ShadowDomStylesheet(fabricConfig.mergeStyles, fabricConfig.serializedStylesheet);\n      }\n\n      _stylesheet = stylesheet;\n      global[STYLESHEET_SETTING] = _stylesheet;\n    } else {\n      _stylesheet.setConfig({\n        window: win,\n        inShadow,\n        stylesheetKey,\n      });\n    }\n    if (win) {\n      _stylesheet._getAdoptableStyleSheet(stylesheetKey);\n    }\n\n    return _stylesheet;\n  }\n\n  constructor(config?: IStyleSheetConfig, serializedStylesheet?: ISerializedStylesheet) {\n    super(config, serializedStylesheet);\n\n    this._adoptableSheets = new Map();\n\n    _global[SHADOW_DOM_STYLESHEET_SETTING] = ShadowDomStylesheet;\n  }\n\n  public getAdoptedSheets(): Map<string, ExtendedCSSStyleSheet> {\n    return this._adoptableSheets;\n  }\n\n  public onAddSheet(callback: AddSheetCallback): Function {\n    this._onAddSheetCallbacks.push(callback);\n\n    return () => {\n      this._onAddSheetCallbacks = this._onAddSheetCallbacks.filter(cb => cb !== callback);\n    };\n  }\n\n  public insertRule(rule: string, preserve?: boolean): void {\n    const { injectionMode, stylesheetKey = GLOBAL_STYLESHEET_KEY } = this._config;\n\n    const injectStyles = injectionMode !== InjectionMode.none;\n    const addToConstructableStylesheet =\n      stylesheetKey === GLOBAL_STYLESHEET_KEY || !!this._adoptableSheets.has(stylesheetKey);\n\n    let constructableSheet: CSSStyleSheet | undefined = undefined;\n\n    if (injectStyles && addToConstructableStylesheet) {\n      constructableSheet = this._getAdoptableStyleSheet(stylesheetKey);\n    }\n\n    if (constructableSheet) {\n      this._insertRuleIntoSheet(constructableSheet, rule);\n    }\n\n    super.insertRule(rule, preserve, stylesheetKey);\n  }\n\n  protected _getCacheKey(key: string): string {\n    const { inShadow = false, stylesheetKey: currentStylesheetKey = GLOBAL_STYLESHEET_KEY } = this._config;\n\n    if (inShadow) {\n      return `__${currentStylesheetKey}__${key}`;\n    }\n\n    return super._getCacheKey(key);\n  }\n\n  protected _createStyleElement(): HTMLStyleElement {\n    const styleElement = super._createStyleElement();\n\n    if (this._config.stylesheetKey === GLOBAL_STYLESHEET_KEY) {\n      styleElement.setAttribute('data-merge-styles-global', 'true');\n    }\n\n    return styleElement;\n  }\n\n  private _makeCSSStyleSheet(): ExtendedCSSStyleSheet {\n    const win = this._config.window || window;\n    let sheet: ExtendedCSSStyleSheet | undefined = undefined;\n    if (!SUPPORTS_CONSTRUCTABLE_STYLESHEETS) {\n      const style = this._createStyleElement();\n      sheet = style.sheet as ExtendedCSSStyleSheet;\n    } else {\n      sheet = new (win as Window & typeof globalThis).CSSStyleSheet() as ExtendedCSSStyleSheet;\n    }\n\n    if (sheet) {\n      sheet.bucketName = 'merge-styles';\n      sheet.metadata = {\n        stylesheetKey: this._config.stylesheetKey || GLOBAL_STYLESHEET_KEY,\n        sortOrder: this._sheetCounter++,\n      };\n    }\n\n    return sheet;\n  }\n\n  private _addAdoptableStyleSheet(key: string, sheet: ExtendedCSSStyleSheet, queue: boolean = true): void {\n    if (!this._adoptableSheets.has(key)) {\n      this._adoptableSheets.set(key, sheet);\n      const win = this._config.window;\n      if (queue && win) {\n        win.queueMicrotask(() => {\n          this._onAddSheetCallbacks.forEach(callback => callback({ key, sheet }));\n        });\n      }\n    }\n  }\n\n  private _getAdoptableStyleSheet(key: string): ExtendedCSSStyleSheet {\n    let sheet = this._adoptableSheets.get(key);\n    if (!sheet) {\n      sheet = this._makeCSSStyleSheet();\n      this._addAdoptableStyleSheet(key, sheet);\n    }\n\n    return sheet;\n  }\n}\n"]}